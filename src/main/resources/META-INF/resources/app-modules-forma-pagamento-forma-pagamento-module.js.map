{"version":3,"sources":["webpack:///./src/app/modules/forma-pagamento/forma-pagamento-form/forma-pagamento-form.component.html","webpack:///./src/app/modules/forma-pagamento/forma-pagamento-list/forma-pagamento-list.component.html","webpack:///./src/app/modules/forma-pagamento/forma-pagamento-form/forma-pagamento-form.component.scss","webpack:///./src/app/modules/forma-pagamento/forma-pagamento-form/forma-pagamento-form.component.ts","webpack:///./src/app/modules/forma-pagamento/forma-pagamento-list/forma-pagamento-list.component.scss","webpack:///./src/app/modules/forma-pagamento/forma-pagamento-list/forma-pagamento-list.component.ts","webpack:///./src/app/modules/forma-pagamento/forma-pagamento.module.ts","webpack:///./src/app/modules/forma-pagamento/forma-pagamento.routing.ts"],"names":[],"mappings":"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","file":"app-modules-forma-pagamento-forma-pagamento-module.js","sourcesContent":["module.exports = \"<div fxLayoutAlign=\\\"space-between center\\\">\\r\\n  <h2 mat-dialog-title>{{title}}</h2>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content>\\r\\n\\r\\n  <form #qualificadorForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n        <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n          <mat-label>Código</mat-label>\\r\\n          <input uppercase required [(ngModel)]=\\\"formaPagamento.codigo\\\" [disabled]=\\\"true\\\" name=\\\"codigo\\\" matInput maxlength=\\\"144\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Forma de pagamento</mat-label>\\r\\n        <input uppercase required [(ngModel)]=\\\"formaPagamento.formaPagamento\\\" name=\\\"formaPagamento\\\" matInput maxlength=\\\"144\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n        <label> <label style=\\\"font-weight: bold\\\">Data de criação:</label>\\r\\n            {{ formaPagamento.created ? (formaPagamento.created | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n        <label class=\\\"push-top-sm \\\"><label style=\\\"font-weight: bold\\\">Data de atualização :</label>\\r\\n            {{ formaPagamento.updated ? (formaPagamento.updated | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n  <button  (click)=\\\"onSubmit(qualificadorForm)\\\" mat-raised-button class=\\\"white-btn\\\"\\r\\n    color=\\\"primary\\\">\\r\\n    SALVAR\\r\\n  </button>\\r\\n  <button mat-dialog-close mat-raised-button class=\\\"white-btn\\r\\n  push-left-md bgc-grey-800\\\">\\r\\n    CANCELAR\\r\\n  </button>\\r\\n    </div>\\r\\n</mat-dialog-actions>\"","module.exports = \"<mat-toolbar class=\\\"toolbar-default\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <mat-form-field [floatLabel]=\\\"'never'\\\" style=\\\"width: 80vh; \\\"  appearance=\\\"outline\\\">\\r\\n      <mat-label>FORMA PAGAMENTO</mat-label>\\r\\n      <input uppercase matInput maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.formaPagamento\\\">\\r\\n    </mat-form-field>\\r\\n    <span flex></span>\\r\\n    <button color=\\\"primary\\\" (click)=\\\"openForm()\\\" mat-raised-button>NOVA FORMA DE PAGAMENTO</button>\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n  <mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n    <button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"onListFormaPagamentos()\\\" mat-raised-button\\r\\n      type=\\\"submit\\\">CONSULTAR</button>\\r\\n    <button color=\\\"accent\\\" class=\\\"white-btn\\\" (click)=\\\"filters.formaPagamento = ''; onListFormaPagamentos()\\\" mat-raised-button>LIMPAR FILTROS</button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n\\r\\n  <td-data-table *ngIf=\\\"pageRequest?.content?.length > 0\\\" #dataTable [data]=\\\"pageRequest.content\\\"\\r\\n    [columns]=\\\"tableColumns\\\" [clickable]=\\\"true\\\" (rowClick)=\\\"openForm(row)\\\">\\r\\n\\r\\n    <ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"situacao\\\" let-formaPagamento=\\\"row\\\">\\r\\n      <mat-icon *ngIf=\\\"formaPagamento?.situacao\\\" class=\\\"tc-green-700\\\" matTooltip=\\\"Ativado\\\">check_circle</mat-icon>\\r\\n      <mat-icon *ngIf=\\\"!formaPagamento?.situacao\\\" matTooltip=\\\"Desativado\\\" class=\\\"tc-red-700\\\">block</mat-icon>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template tdDataTableTemplate=\\\"formaPagamento\\\" let-formaPagamento=\\\"row\\\">\\r\\n      <span class=\\\"text-truncate\\\">\\r\\n        {{ formaPagamento?.formaPagamento}}\\r\\n      </span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"opcoes\\\" let-formaPagamento=\\\"row\\\">\\r\\n\\r\\n      <button matTooltip=\\\"Editar formaPagamento\\\" stopPropagation\\r\\n        (click)=\\\"$event.stopPropagation(); openForm(formaPagamento)\\\" mat-icon-button>\\r\\n        <mat-icon class=\\\"tc-grey-700 edit-button-hover\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"!formaPagamento.situacao\\\" matTooltip=\\\"Ativar forma de pagamento\\\"\\r\\n        (click)=\\\"$event.stopPropagation(); atualizarSituacaoFormaPagamento(formaPagamento)\\\" mat-icon-button>\\r\\n        <mat-icon class=\\\"tc-grey-700 active-button-hover\\\">check_circle_outline</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"formaPagamento.situacao\\\" matTooltip=\\\"Excluir/Desativar forma de pagamento\\\"\\r\\n        (click)=\\\"$event.stopPropagation(); atualizarSituacaoFormaPagamento(formaPagamento)\\\" mat-icon-button>\\r\\n        <mat-icon class=\\\"tc-grey-700 delete-button-hover\\\">block</mat-icon>\\r\\n      </button>\\r\\n\\r\\n    </ng-template>\\r\\n\\r\\n    <td-paging-bar #pagingBar [pageSize]=\\\"pageRequest.pageable.size\\\" [total]=\\\"pageRequest.totalElements\\\"\\r\\n      (change)=\\\"page($event)\\\" *ngIf=\\\"pageRequest.content != null && pageRequest.content.length\\\">\\r\\n      <span td-paging-bar-label hide-xs>Registros por página:</span>\\r\\n      <mat-select [style.width.px]=\\\"50\\\" [(ngModel)]=\\\"pageRequest.pageable.size\\\">\\r\\n        <mat-option *ngFor=\\\"let size of [10,50,100]\\\" [value]=\\\"size\\\">\\r\\n          {{size}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      {{pagingBar.range}} <span hide-xs>de {{pagingBar.total}}</span>\\r\\n    </td-paging-bar>\\r\\n\\r\\n  </td-data-table>\\r\\n  <div *ngIf=\\\"pageRequest?.content?.length == 0\\\" class=\\\"pad-md\\\" fxLayoutAlign=\\\"center \\\">\\r\\n    <label>Nenhum registro encontrado.</label>\\r\\n  </div>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZm9ybWEtcGFnYW1lbnRvL2Zvcm1hLXBhZ2FtZW50by1mb3JtL2Zvcm1hLXBhZ2FtZW50by1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { FormaPagamento } from './../../../../generated/entities';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { FormaPagamentoService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-formaPagamento-form',\r\n  templateUrl: './forma-pagamento-form.component.html',\r\n  styleUrls: ['./forma-pagamento-form.component.scss']\r\n})\r\nexport class FormaPagamentoFormComponent implements OnInit {\r\n  public title = \"\";\r\n\r\n  public formaPagamento: any = { codigo: 0};\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private formaPagamentoService: FormaPagamentoService,\r\n    private openSnackBarService: OpenSnackBarService,\r\n    public dialogRef: MatDialogRef<FormaPagamentoFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  )\r\n  {\r\n    if (data.codigo != null)\r\n    {\r\n      this.onFindFormaPagamentoById(data.codigo);\r\n    }\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n\r\n    if (this.data.codigo)\r\n      this.title = \"Alterar forma de pagamento\";\r\n    else\r\n      this.title = \"Inserir forma de pagamento\";\r\n\r\n  }\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n\r\n  private onFindFormaPagamentoById(id: any)\r\n  {\r\n    this.formaPagamentoService.findFormaPagamentoById(id).subscribe(formaPagamento =>\r\n    {\r\n      this.formaPagamento = formaPagamento;\r\n    }, err => this.openSnackBarService.openError(err.message))\r\n\r\n  }\r\n\r\n public onSubmit(form): void\r\n  {\r\n\r\n    if(form.invalid){\r\n      this.openSnackBarService.openError(`Todos os campos com * devem ser preenchidos.`);\r\n      return;\r\n    }\r\n\r\n    if (!this.formaPagamento.codigo)\r\n    {\r\n      this.formaPagamentoService.insertFormaPagamento(this.formaPagamento).subscribe(formaPagamento =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Forma de pagamento inserida.\");\r\n        this.dialogRef.close(this.formaPagamento);\r\n      }, err => this.openSnackBarService.openError(err.message))\r\n    }\r\n    else\r\n    {\r\n      this.formaPagamentoService.updateFormaPagamento(this.formaPagamento).subscribe(formaPagamento =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Forma de pagamento atualizada.\");\r\n        this.dialogRef.close(this.formaPagamento);\r\n      }, err => this.openSnackBarService.openError(err.message))\r\n    }\r\n\r\n  }\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZm9ybWEtcGFnYW1lbnRvL2Zvcm1hLXBhZ2FtZW50by1saXN0L2Zvcm1hLXBhZ2FtZW50by1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { FormaPagamentoFormComponent } from './../forma-pagamento-form/forma-pagamento-form.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormaPagamentoService } from 'src/generated/services';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TdDialogService, ITdDataTableColumn, IPageChangeEvent } from '@covalent/core';\r\nimport { PaginationService } from 'src/app/common/pagination/pagination.service';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { FormaPagamento } from 'src/generated/entities';\r\n\r\n\r\n@Component({\r\n    selector: 'app-formaPagamento-list',\r\n    templateUrl: './forma-pagamento-list.component.html',\r\n    styleUrls: ['./forma-pagamento-list.component.scss']\r\n})\r\nexport class FormaPagamentoListComponent implements OnInit\r\n{\r\n\r\n    public pageRequest: any = [];\r\n\r\n    public filters = {\r\n        formaPagamento: '',\r\n\r\n    }\r\n    public tableColumns: ITdDataTableColumn[] = [\r\n        { name: 'codigo', label: 'CÓDIGO' },\r\n        { name: 'formaPagamento', label: 'FORMA PAGAMENTO' },\r\n        { name: 'situacao', label: 'SITUAÇÃO', sortable: false },\r\n        { name: 'opcoes', label: 'OPÇÕES', tooltip: 'Opções', width: 250 }\r\n    ];\r\n\r\n    constructor(public dialog: MatDialog,\r\n        private _dialogService: TdDialogService,\r\n        private paginationService: PaginationService,\r\n        private openSnackBarService: OpenSnackBarService,\r\n        private formaPagamentoService: FormaPagamentoService) \r\n    {\r\n\r\n        this.pageRequest = paginationService.pageRequest('formaPagamento', 'ASC', 10);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    ngOnInit()\r\n    {\r\n        this.onListFormaPagamentos();\r\n    }\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           BEHAVIORS\r\n    *-------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Método responsável pela listagem dos avisos utilizando os filtros informados pelo usuário\r\n     */\r\n    public onListFormaPagamentos(filters: Boolean = true): void\r\n    {\r\n\r\n\r\n        this.formaPagamentoService.listFormaPagamentoByFilters(\r\n            this.filters.formaPagamento,\r\n            this.pageRequest.pageable\r\n        ).subscribe((result) =>\r\n        {\r\n            this.pageRequest = this.paginationService.fixPageRequest(result, this.pageRequest);\r\n        }), (error) => { this.openSnackBarService.openError(error.message) }\r\n    }\r\n\r\n    public openForm(formaPagamento: FormaPagamento)\r\n    {\r\n        const dialogRef = this.dialog.open(FormaPagamentoFormComponent, {\r\n            width: '600px',\r\n            height: 'auto',\r\n            data: { codigo: formaPagamento ? formaPagamento.codigo : null }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(formaPagamentoSaved =>\r\n        {\r\n            if (formaPagamentoSaved) this.onListFormaPagamentos();\r\n        });\r\n    }\r\n\r\n\r\n    public atualizarSituacaoFormaPagamento(formaPagamento: FormaPagamento)\r\n    {\r\n        if (formaPagamento.situacao)\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja excluir esta forma de pagamento ?\",\r\n                title: \"Excluir forma de pagamento\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.formaPagamentoService.deleteFormaPagamento(formaPagamento.codigo).subscribe(result =>\r\n                    {\r\n                        this.openSnackBarService.openSuccess('Forma de pagamento excluída com sucesso.');\r\n                        this.onListFormaPagamentos();\r\n                    }, err =>\r\n                        {\r\n\r\n\r\n                            this._dialogService.openConfirm({\r\n                                message: \"Não foi possível excluir esta forma de pagamento pois o mesmo está relacionado a outro registro. Deseja desativar ?\",\r\n                                title: \"Desativar forma de pagamento\",\r\n                                cancelButton: 'CANCELAR',\r\n                                acceptButton: 'CONFIRMAR',\r\n                                width: '500px'\r\n                            }).afterClosed().subscribe((accept: boolean) =>\r\n                            {\r\n                                if (accept)\r\n                                {\r\n                                    this.formaPagamentoService.updateSituacaoFormaPagamento(formaPagamento.codigo, !formaPagamento.situacao).subscribe(result =>\r\n                                    {\r\n                                        this.openSnackBarService.openSuccess('Forma de pagamento desativada com sucesso.');\r\n                                        this.onListFormaPagamentos();\r\n                                    }, err => this.openSnackBarService.openError(err.message))\r\n                                }\r\n                            });\r\n                        })\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja ativar este forma de pagamento ?\",\r\n                title: \"Ativar forma de pagamento\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.formaPagamentoService.updateSituacaoFormaPagamento(formaPagamento.codigo, !formaPagamento.situacao).subscribe(result =>\r\n                    {\r\n                        this.openSnackBarService.openSuccess('Forma de pagamento ativado com sucesso.');\r\n                        this.onListFormaPagamentos();\r\n                    }, err => this.openSnackBarService.openError(err.message))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public page(pagingEvent: IPageChangeEvent)\r\n    {\r\n        this.pageRequest.pageable.page = pagingEvent.page - 1;\r\n        this.pageRequest.pageable.size = pagingEvent.pageSize;\r\n\r\n        this.onListFormaPagamentos();\r\n    }\r\n\r\n\r\n}\r\n","import { FormaPagamentoFormComponent } from './forma-pagamento-form/forma-pagamento-form.component';\r\nimport { FormaPagamentoListComponent } from './forma-pagamento-list/forma-pagamento-list.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedCommonModule } from 'src/app/common/shared-common.module';\r\nimport { FormaPagamentoRouting } from './forma-pagamento.routing';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormaPagamentoListComponent,\r\n    FormaPagamentoFormComponent,\r\n  ],\r\n  imports: [\r\n    SharedCommonModule,\r\n    FormaPagamentoRouting\r\n  ],\r\n  exports: [\r\n    FormaPagamentoListComponent,\r\n    FormaPagamentoFormComponent,\r\n    FormaPagamentoRouting\r\n  ],\r\n  entryComponents: [\r\n    FormaPagamentoFormComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class FormaPagamentoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FormaPagamentoListComponent } from './forma-pagamento-list/forma-pagamento-list.component';\r\nimport { AuthGuard } from 'src/app/common/autenticacao/auth-guard.service';\r\n\r\nconst formaPagamentoRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: FormaPagamentoListComponent,\r\n                data: {\r\n                    title: 'Forma de pagamento',\r\n                },\r\n                canActivate: [AuthGuard]\r\n            }\r\n        ],\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(formaPagamentoRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class FormaPagamentoRouting { }\r\n"],"sourceRoot":""}