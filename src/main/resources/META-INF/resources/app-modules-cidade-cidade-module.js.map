{"version":3,"sources":["webpack:///./src/app/modules/cidade/cidade-form/cidade-form.component.html","webpack:///./src/app/modules/cidade/cidade-list/cidade-list.component.html","webpack:///./src/app/modules/cidade/cidade-form/cidade-form.component.scss","webpack:///./src/app/modules/cidade/cidade-form/cidade-form.component.ts","webpack:///./src/app/modules/cidade/cidade-list/cidade-list.component.scss","webpack:///./src/app/modules/cidade/cidade-list/cidade-list.component.ts","webpack:///./src/app/modules/cidade/cidade.module.ts","webpack:///./src/app/modules/cidade/cidade.routing.ts"],"names":[],"mappings":"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","file":"app-modules-cidade-cidade-module.js","sourcesContent":["module.exports = \"<mat-dialog-content>\\r\\n  <h2 mat-dialog-title>{{title}}</h2>\\r\\n\\r\\n\\r\\n  <form #qualificadorForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>CÃ³digo</mat-label>\\r\\n        <input  uppercase matInput [(ngModel)]=\\\"cidade.codigo\\\" name=\\\"codigo\\\" [disabled]=\\\"true\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>DDD</mat-label>\\r\\n        <input required [(ngModel)]=\\\"cidade.ddd\\\" maxlength=\\\"4\\\" name=\\\"ddd\\\" matInput currencyMask [options]=\\\"{\\r\\n          align: 'left',\\r\\n          prefix: '',\\r\\n          thousands: '',\\r\\n          decimal: ',',\\r\\n          precision: 0,\\r\\n          allowNegative: false\\r\\n        }\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" >\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Cidade</mat-label>\\r\\n        <input required uppercase [(ngModel)]=\\\"cidade.cidade\\\" name=\\\"cidade\\\" matInput maxlength=\\\"144\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n        <auto-complete-with-redirect\\r\\n            style=\\\"margin-left: 30px\\\"\\r\\n            fxFlex\\r\\n            title=\\\"Estado\\\"\\r\\n            key=\\\"codigo\\\"\\r\\n            link=\\\"estado\\\"\\r\\n            displayKey=\\\"estado\\\"\\r\\n            [classes]=\\\"required-class-estado\\\"\\r\\n            [displayId]=\\\"true\\\"\\r\\n            [list]=\\\"{values: estados}\\\"\\r\\n            [itemSelected]=\\\"{selected: cidade.estado}\\\"\\r\\n            (onFilterChange)=\\\"onListEstados($event)\\\"\\r\\n            (onSelect)=\\\"cidade.estado = $event\\\"\\r\\n            (onDelete)=\\\"cidade.estado = {}\\\"\\r\\n        >\\r\\n        </auto-complete-with-redirect>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div>\\r\\n\\r\\n      <!-- SELECT-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </form>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n        <label> <label style=\\\"font-weight: bold\\\">Data de criaÃ§Ã£o:</label>\\r\\n            {{ cidade.created ? (cidade.created | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n        <label class=\\\"push-top-sm \\\"><label style=\\\"font-weight: bold\\\">Data de atualizaÃ§Ã£o :</label>\\r\\n            {{ cidade.updated ? (cidade.updated | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n  \\r\\n  <button  (click)=\\\"onSubmit(qualificadorForm)\\\" mat-raised-button class=\\\"white-btn\\\"\\r\\n    color=\\\"primary\\\">\\r\\n    SALVAR\\r\\n  </button>\\r\\n  <button mat-dialog-close mat-raised-button class=\\\"white-btn\\r\\n  push-left-md bgc-grey-800\\\">\\r\\n    CANCELAR\\r\\n  </button>\\r\\n    </div>\\r\\n</mat-dialog-actions>\"","module.exports = \"<mat-toolbar class=\\\"toolbar-default\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <mat-form-field [floatLabel]=\\\"'never'\\\" style=\\\"width: 80vh; \\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>CIDADE</mat-label>\\r\\n      <input matInput uppercase maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.cidade\\\">\\r\\n    </mat-form-field>\\r\\n    <span flex></span>\\r\\n    <button class=\\\"white-btn\\\" color=\\\"primary\\\" (click)=\\\"openForm()\\\" mat-raised-button>ADICIONAR NOVA CIDADE</button>\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n  <mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n    <button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"onListCidades()\\\" mat-raised-button\\r\\n      type=\\\"submit\\\">CONSULTAR</button>\\r\\n    <button color=\\\"accent\\\" class=\\\"white-btn\\\" (click)=\\\"filters.cidade = ''; onListCidades()\\\" mat-raised-button>LIMPAR\\r\\n      FILTROS</button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n\\r\\n  <td-data-table *ngIf=\\\"pageRequest?.content?.length > 0\\\" #dataTable [data]=\\\"pageRequest.content\\\"\\r\\n    [columns]=\\\"tableColumns\\\">\\r\\n\\r\\n    <ng-template tdDataTableTemplate=\\\"cidade\\\" let-cidade=\\\"row\\\">\\r\\n      <span class=\\\"text-truncate\\\">\\r\\n        {{ cidade?.cidade}}\\r\\n      </span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template tdDataTableTemplate=\\\"ddd\\\" let-cidade=\\\"row\\\">\\r\\n      <span class=\\\"text-truncate\\\">\\r\\n        {{ cidade?.ddd}}\\r\\n      </span>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"opcoes\\\" let-cidade=\\\"row\\\">\\r\\n\\r\\n      <button matTooltip=\\\"Editar cidade\\\"  class=\\\"tc-grey-700 edit-button-hover\\\" stopPropagation (click)=\\\"$event.stopPropagation(); openForm(cidade)\\\"\\r\\n        mat-icon-button>\\r\\n        <mat-icon class=\\\"edit-icon\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n\\r\\n      <button *ngIf=\\\"!cidade.situacao\\\" matTooltip=\\\"Ativar cidade\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoCidade(cidade)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 active-button-hover\\\">check_circle_outline</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"cidade.situacao\\\" matTooltip=\\\"Excluir/Desativar cidade\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoCidade(cidade)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 delete-button-hover\\\">block</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"situacao\\\" let-cidade=\\\"row\\\">\\r\\n        <mat-icon *ngIf=\\\"cidade?.situacao\\\" class=\\\"tc-green-700\\\" matTooltip=\\\"Ativado\\\">check_circle</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"!cidade?.situacao\\\" matTooltip=\\\"Desativado\\\" class=\\\"tc-red-700\\\">block</mat-icon>\\r\\n      </ng-template>\\r\\n\\r\\n  </td-data-table>\\r\\n\\r\\n  <td-paging-bar #pagingBar [pageSize]=\\\"pageRequest.pageable.size\\\" [total]=\\\"pageRequest.totalElements\\\"\\r\\n    (change)=\\\"page($event)\\\" *ngIf=\\\"pageRequest.content != null && pageRequest.content.length\\\">\\r\\n    <span td-paging-bar-label hide-xs>Registros por pÃ¡gina:</span>\\r\\n    <mat-select [style.width.px]=\\\"50\\\" [(ngModel)]=\\\"pageRequest.pageable.size\\\">\\r\\n      <mat-option *ngFor=\\\"let size of [10,50,100]\\\" [value]=\\\"size\\\">\\r\\n        {{size}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    {{pagingBar.range}} <span hide-xs>de {{pagingBar.total}}</span>\\r\\n  </td-paging-bar>\\r\\n\\r\\n  <div *ngIf=\\\"pageRequest?.content?.length == 0\\\" class=\\\"pad-md\\\" fxLayoutAlign=\\\"center \\\">\\r\\n    <label>Nenhum registro encontrado.</label>\\r\\n  </div>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2lkYWRlL2NpZGFkZS1mb3JtL2NpZGFkZS1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Cidade, Estado } from './../../../../generated/entities';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { CidadeService, EstadoService } from 'src/generated/services';\r\nimport { PaisService } from 'src/generated/services';\r\n\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { TextMasks } from 'src/app/common/mask/text-masks';\r\n\r\n@Component({\r\n  selector: 'app-cidade-form',\r\n  templateUrl: './cidade-form.component.html',\r\n  styleUrls: ['./cidade-form.component.scss']\r\n})\r\nexport class CidadeFormComponent implements OnInit {\r\n\r\n  public cidade: Cidade = { codigo: 0};\r\n\r\n  public title = \"\";\r\n\r\n  public textMasks = TextMasks;\r\n\r\n  public estados: Estado[];\r\n\r\n  constructor(\r\n    private cidadeService: CidadeService,\r\n    private paisService: PaisService,\r\n    private estadoService: EstadoService,\r\n    private openSnackBarService: OpenSnackBarService,\r\n    public dialogRef: MatDialogRef<CidadeFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  )\r\n  {\r\n    if (data.codigo != null)\r\n    {\r\n      this.onFindCidadeById(data.codigo);\r\n    }\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    if (this.data.codigo)\r\n      this.title = \"Alterar cidade\";\r\n    else\r\n      this.title = \"Inserir cidade\";\r\n\r\n    this.paisService.listPaisesByFilters(\"\", null);\r\n    this.onListEstados(\"\");\r\n  }\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n\r\n  private onFindCidadeById(id: any)\r\n  {\r\n    this.cidadeService.findCidadeById(id).subscribe(cidade =>\r\n    {\r\n      this.cidade = cidade;\r\n    }, err => this.openSnackBarService.openError(err.message))\r\n\r\n  }\r\n\r\n public onSubmit(form): void\r\n  {\r\n\r\n    if(form.invalid){\r\n      this.openSnackBarService.openError(`Todos os campos com * devem ser preenchidos.`);\r\n      return;\r\n    }\r\n\r\n    if(!this.cidade.estado || (this.cidade.estado && !this.cidade.estado.codigo))\r\n    {\r\n      this.openSnackBarService.openError(\"O campo estado deve ser preenchido.\");\r\n      return;\r\n    }\r\n    \r\n    if (!this.cidade.codigo)\r\n    {\r\n      this.cidadeService.insertCidade(this.cidade).subscribe(cidade =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Cidade inserida com sucesso.\");\r\n        this.dialogRef.close(this.cidade);\r\n      }, err => this.openSnackBarService.openError(err.message))\r\n    }\r\n    else\r\n    {\r\n      this.cidadeService.updateCidade(this.cidade).subscribe(cidade =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Cidade atualizada com sucesso.\");\r\n        this.dialogRef.close(this.cidade);\r\n      }, err => this.openSnackBarService.openError(err.message))\r\n    }\r\n\r\n  }\r\n\r\n  public onListEstados(filter)\r\n  {\r\n      this.estadoService.listEstadosByFilters(filter ? filter : \"\", null).subscribe( page => {\r\n      this.estados = page.content.filter( c => c.situacao);\r\n      })\r\n  }\r\n\r\n  public displayFnEstado(estado?: Estado): string | undefined {\r\n      return estado ? estado.estado : undefined;\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2lkYWRlL2NpZGFkZS1saXN0L2NpZGFkZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { CidadeFormComponent } from './../cidade-form/cidade-form.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CidadeService } from 'src/generated/services';\r\n\r\n\r\nimport { MatDialog } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TdDialogService, ITdDataTableColumn, IPageChangeEvent } from '@covalent/core';\r\nimport { PaginationService } from 'src/app/common/pagination/pagination.service';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { Cidade } from 'src/generated/entities';\r\n\r\n\r\n@Component({\r\n    selector: 'app-cidade-list',\r\n    templateUrl: './cidade-list.component.html',\r\n    styleUrls: ['./cidade-list.component.scss']\r\n})\r\nexport class CidadeListComponent implements OnInit\r\n{\r\n\r\n    public pageRequest: any = [];\r\n\r\n    public filters = {\r\n        cidade: '',\r\n\r\n    }\r\n    public tableColumns: ITdDataTableColumn[] = [\r\n        { name: 'codigo', label: 'CÃDIGO' },\r\n        { name: 'cidade', label: 'CIDADE' },\r\n        { name: 'ddd', label: 'DDD' },\r\n        { name: 'situacao', label: 'SITUAÃÃO', sortable: false },\r\n        { name: 'opcoes', label: 'OPÃÃES', tooltip: 'OPÃÃES', width: 250 }\r\n    ];\r\n\r\n    constructor(public dialog: MatDialog,\r\n        private _dialogService: TdDialogService,\r\n        private paginationService: PaginationService,\r\n        private openSnackBarService: OpenSnackBarService,\r\n        private cidadeService: CidadeService) \r\n    {\r\n\r\n        this.pageRequest = paginationService.pageRequest('codigo', 'ASC', 10);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    ngOnInit()\r\n    {\r\n        this.onListCidades();\r\n    }\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           BEHAVIORS\r\n    *-------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * MÃ©todo responsÃ¡vel pela listagem dos avisos utilizando os filtros informados pelo usuÃ¡rio\r\n     */\r\n    public onListCidades(filters: Boolean = true): void\r\n    {\r\n        this.cidadeService.listCidadesByFilters(\r\n            this.filters.cidade,\r\n            this.pageRequest.pageable\r\n        ).subscribe((result) =>\r\n        {\r\n            this.pageRequest = this.paginationService.fixPageRequest(result, this.pageRequest);\r\n        }), (error) => { this.openSnackBarService.openError(error.message) }\r\n    }\r\n\r\n    public openForm(cidade)\r\n    {\r\n        const dialogRef = this.dialog.open(CidadeFormComponent, {\r\n            width: '600px',\r\n            height: 'auto',\r\n            data: { codigo: cidade ? cidade.codigo : null }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(cidadeSaved =>\r\n        {\r\n            if (cidadeSaved) this.onListCidades();\r\n        });\r\n    }\r\n\r\n\r\n    public atualizarSituacaoCidade(cidade: Cidade)\r\n    {\r\n        if(cidade.situacao)\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja excluir esta cidade ?\",\r\n                title: \"Excluir cidade\" ,\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.cidadeService.deleteCidade(cidade.codigo).subscribe( result => {\r\n                        this.openSnackBarService.openSuccess('Cidade excluÃ­da com sucesso.');\r\n                        this.onListCidades();\r\n                    }, err => {\r\n\r\n\r\n                        this._dialogService.openConfirm({\r\n                            message: \"NÃ£o foi possÃ­vel excluir esta cidade pois o mesmo estÃ¡ relacionado a outro registro. Deseja desativar ?\",\r\n                            title: \"Desativar cidade\",\r\n                            cancelButton: 'CANCELAR',\r\n                            acceptButton: 'CONFIRMAR',\r\n                            width: '500px'\r\n                        }).afterClosed().subscribe((accept: boolean) =>\r\n                        {\r\n                            if (accept)\r\n                            {\r\n                                this.cidadeService.updateSituacaoCidade(cidade.codigo, !cidade.situacao).subscribe( result => {\r\n                                    this.openSnackBarService.openSuccess('Cidade desativada com sucesso.');\r\n                                    this.onListCidades();\r\n                                }, err => this.openSnackBarService.openError(err.message))\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja ativar esta cidade ?\",\r\n                title: \"Ativar cidade\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.cidadeService.updateSituacaoCidade(cidade.codigo, !cidade.situacao).subscribe( result => {\r\n                        this.openSnackBarService.openSuccess('Cidade ativado com sucesso.');\r\n                        this.onListCidades();\r\n                    }, err => this.openSnackBarService.openError(err.message))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public page(pagingEvent: IPageChangeEvent)\r\n    {\r\n        this.pageRequest.pageable.page = pagingEvent.page - 1;\r\n        this.pageRequest.pageable.size = pagingEvent.pageSize;\r\n\r\n        this.onListCidades();\r\n    }\r\n\r\n}\r\n","import { CidadeFormComponent } from './cidade-form/cidade-form.component';\r\nimport { CidadeListComponent } from './cidade-list/cidade-list.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedCommonModule } from 'src/app/common/shared-common.module';\r\nimport { CidadeRouting } from './cidade.routing';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CidadeListComponent,\r\n    CidadeFormComponent,\r\n  ],\r\n  imports: [\r\n    SharedCommonModule,\r\n    CidadeRouting\r\n  ],\r\n  exports: [\r\n    CidadeListComponent,\r\n    CidadeFormComponent,\r\n    CidadeRouting\r\n  ],\r\n  entryComponents: [\r\n    CidadeFormComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class CidadeModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CidadeListComponent } from './cidade-list/cidade-list.component';\r\nimport { AuthGuard } from 'src/app/common/autenticacao/auth-guard.service';\r\n\r\nconst cidadeRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: CidadeListComponent,\r\n                data: {\r\n                    title: 'Cidades',\r\n                    onlyFranquiador: true\r\n                },\r\n                canActivate: [AuthGuard]\r\n            }\r\n        ]\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(cidadeRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CidadeRouting { }\r\n"],"sourceRoot":""}