{"version":3,"sources":["webpack:///./src/app/modules/cliente/cliente-form/cliente-form.component.html","webpack:///./src/app/modules/cliente/cliente-list/cliente-list.component.html","webpack:///./src/app/modules/cliente/cliente-form/cliente-form.component.scss","webpack:///./src/app/modules/cliente/cliente-form/cliente-form.component.ts","webpack:///./src/app/modules/cliente/cliente-list/cliente-list.component.scss","webpack:///./src/app/modules/cliente/cliente-list/cliente-list.component.ts","webpack:///./src/app/modules/cliente/cliente.module.ts","webpack:///./src/app/modules/cliente/cliente.routing.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mEAAmE,OAAO,o1CAAo1C,4BAA4B,kHAAkH,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,2jBAA2jB,+cAA+c,gCAAgC,kRAAkR,gCAAgC,6rBAA6rB,gDAAgD,4lCAA4lC,kBAAkB,oCAAoC,qCAAqC,oMAAoM,kBAAkB,sCAAsC,iCAAiC,0QAA0Q,gBAAgB,mFAAmF,yBAAyB,0lBAA0lB,2BAA2B,kCAAkC,oCAAoC,seAAse,yEAAyE,2HAA2H,yEAAyE,4W;;;;;;;;;;;ACAx+N,qJAAqJ,snBAAsnB,kaAAka,mBAAmB,0KAA0K,mBAAmB,sKAAsK,eAAe,mpBAAmpB,+OAA+O,+SAA+S,wpBAAwpB,MAAM,sDAAsD,iBAAiB,oBAAoB,iBAAiB,iN;;;;;;;;;;;ACA7+G,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;ACCL;AACQ;AAC2D;AACpC;AAC9B;AAO3D;IA2BE,8BACU,cAA8B,EAC9B,mBAAwC,EACzC,SAA6C,EAC5C,aAA4B,EAC5B,wBAAkD,EAC1B,IAAS;QALjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACzC,cAAS,GAAT,SAAS,CAAoC;QAC5C,kBAAa,GAAb,aAAa,CAAe;QAC5B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAC1B,SAAI,GAAJ,IAAI,CAAK;QA7B3C;;gFAEwE;QAEjE,UAAK,GAAG,EAAE,CAAC;QAEX,YAAO,GAAY,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QAEpD,YAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE5F,iBAAY,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAErG,gBAAW,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAM1G,aAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAEtB,UAAK,GAAG,wEAAS,CAAC;QAYvB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EACvB;YACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;IAEpC,CAAC;IAED,uCAAQ,GAAR;QAEE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;YAClB,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;;YAE/B,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;IAEnC,CAAC;IAED;;0EAEsE;IAE9D,gDAAiB,GAAzB,UAA0B,EAAO;QAAjC,iBAOC;QALC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAO;YAEvD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC;IAE5D,CAAC;IAEM,uCAAQ,GAAf,UAAgB,IAAI;QAApB,iBAsFC;QAnFC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EACxB;YACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,qCAAqC,CAAC,CAAC;YAC1E,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EACnC;YACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,oDAAoD,CAAC,CAAC;YACzF,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAChD;YAEE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;YAEpD,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,QAAQ,EAC3D;gBACE,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAE1D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EACrC;oBACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;oBACpD,OAAO;iBACR;aACF;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EACzB;gBACE,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAQ,CAAC;gBACrD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAEhC,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,EACrB;oBACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;oBACzD,OAAO;iBACR;aACF;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EACxB;gBACE,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAQ,CAAC;gBACpD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAEhC,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,EACrB;oBACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;oBACxD,OAAO;iBACR;aACF;iBAED;gBACE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aAEnE;YAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EACxB;gBACE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,iBAAO;oBAE/D,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;oBACtD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC;aAC3D;iBAED;gBACE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,iBAAO;oBAE/D,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;oBAC3D,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC;aAC3D;SAEF;aACG;YACF,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,8CAA8C,CAAC;SACnF;IAIH,CAAC;IAIO,wCAAS,GAAjB,UAAkB,GAAG;QAEnB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,EAAE;YAAE,OAAO,KAAK,CAAC;QAC5B,oCAAoC;QACpC,IAAI,GAAG,CAAC,MAAM,IAAI,EAAE;YAClB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,GAAG,IAAI,aAAa;YACpB,OAAO,KAAK,CAAC;QACf,mBAAmB;QACnB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACxB,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5C,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QAC1B,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE;YACxB,GAAG,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;QACf,mBAAmB;QACnB,GAAG,GAAG,CAAC,CAAC;QACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YACzB,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5C,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QACtB,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE;YACxB,GAAG,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IAGM,4CAAa,GAApB,UAAqB,MAAM;QAA3B,iBAOC;QALC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAGhF,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;QACtD,CAAC,CAAC;IACJ,CAAC;IAEM,8CAAe,GAAtB,UAAuB,MAAe;QAEpC,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5C,CAAC;IAEM,uDAAwB,GAA/B,UAAgC,MAAM;QAAtC,iBAYC;QAVC,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAE3B,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAE,iBAAiB,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;;YACjE,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAE9B,IAAI,CAAC,wBAAwB,CAAC,+BAA+B,CAAC,MAAM,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAE3G,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;QACjE,CAAC,CAAC;IACJ,CAAC;IAEM,yDAA0B,GAAjC,UAAkC,iBAAqC;QAErE,OAAO,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAClE,CAAC;IApOU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sLAA4C;;SAE7C,CAAC;QAkCG,6GAAM,CAAC,iEAAe,CAAC;+EALA,qEAAc;YACT,sGAAmB;YAC9B,8DAAY;YACP,oEAAa;YACF,+EAAwB;OAhCjD,oBAAoB,CAsOhC;IAAD,2BAAC;CAAA;AAtOgC;;;;;;;;;;;;ACZjC,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC4B;AAChC;AAEyC;AACN;AACzB;AACiC;AASzF;IA0BI,8BAAmB,MAAiB,EACxB,cAA+B,EAC/B,iBAAoC,EACpC,mBAAwC,EACxC,cAA8B;QAJvB,WAAM,GAAN,MAAM,CAAW;QACxB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QA3B1C;;gFAEwE;QAEjE,gBAAW,GAAQ,EAAE,CAAC;QAEtB,YAAO,GAAG;YACb,OAAO,EAAE,EAAE;SAEd;QAED;;aAEK;QACE,iBAAY,GAAyB;YACxC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;YACnC,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YACtD,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YACtD,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACxD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;SACtF,CAAC;QAQE,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,uCAAQ,GAAR;QAEI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEM,6CAAc,GAArB,UAAsB,OAAuB;QAA7C,iBAQC;QARqB,wCAAuB;QAEzC,IAAI,CAAC,cAAc,CAAC,qBAAqB,CACrC,IAAI,CAAC,OAAO,CAAC,OAAO,CACvB,CAAC,SAAS,CAAC,UAAC,MAAM;YAEf,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;QACvF,CAAC,CAAC,EAAE,UAAC,KAAK,IAAO,KAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC,CAAC;IACxE,CAAC;IAIM,uCAAQ,GAAf,UAAgB,OAAO;QAAvB,iBAYC;QAVG,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;SACpD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,sBAAY;YAE1C,IAAG,YAAY;gBAAE,KAAI,CAAC,cAAc,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,uDAAwB,GAA/B,UAAgC,OAAgB;QAAhD,iBA2DC;QAzDG,IAAG,OAAO,CAAC,QAAQ,EACnB;YACI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;gBAC5B,OAAO,EAAE,+CAA+C;gBACxD,KAAK,EAAE,iBAAiB;gBACxB,YAAY,EAAE,UAAU;gBACxB,YAAY,EAAE,WAAW;gBACzB,KAAK,EAAE,OAAO;aACjB,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAe;gBAEvC,IAAI,MAAM,EACV;oBACI,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAE,gBAAM;wBAC/D,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC;wBACtE,KAAI,CAAC,cAAc,EAAE,CAAC;oBAC1B,CAAC,EAAE,aAAG;wBAGF,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC;4BAC5B,OAAO,EAAE,0GAA0G;4BACnH,KAAK,EAAE,mBAAmB;4BAC1B,YAAY,EAAE,UAAU;4BACxB,YAAY,EAAE,WAAW;4BACzB,KAAK,EAAE,OAAO;yBACjB,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAe;4BAEvC,IAAI,MAAM,EACV;gCACI,KAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,gBAAM;oCAC1F,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;oCACxE,KAAI,CAAC,cAAc,EAAE,CAAC;gCAC1B,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC;6BAC7D;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC;iBACL;YACL,CAAC,CAAC,CAAC;SACN;aAED;YACI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;gBAC5B,OAAO,EAAE,8CAA8C;gBACvD,KAAK,EAAE,gBAAgB;gBACvB,YAAY,EAAE,UAAU;gBACxB,YAAY,EAAE,WAAW;gBACzB,KAAK,EAAE,OAAO;aACjB,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAe;gBAEvC,IAAI,MAAM,EACV;oBACI,KAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,gBAAM;wBAC1F,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;wBACrE,KAAI,CAAC,cAAc,EAAE,CAAC;oBAC1B,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC;iBAC7D;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEM,mCAAI,GAAX,UAAY,WAA6B;QAErC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC;QAEtD,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IArIQ,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,sLAA4C;;SAE/C,CAAC;+EA2B6B,2DAAS;YACR,8DAAe;YACZ,8FAAiB;YACf,sGAAmB;YACxB,qEAAc;OA9BjC,oBAAoB,CAuIhC;IAAD,2BAAC;CAAA;AAvIgC;;;;;;;;;;;;;;;;;;;;;;AChBQ;AACoC;AACA;AACJ;AACtB;AAsBnD;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAnBzB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yFAAoB;gBACpB,yFAAoB;aACrB;YACD,OAAO,EAAE;gBACP,+DAAc;gBACd,sFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,yFAAoB;gBACpB,yFAAoB;gBACpB,+DAAc;aACf;YACD,eAAe,EAAE;gBACf,yFAAoB;aACrB;YACD,SAAS,EAAE,EAAE;SACd,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC1Be;AACc;AAEsB;AACF;AAE3E,IAAM,aAAa,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,yFAAoB;gBAC/B,IAAI,EAAE;oBACF,KAAK,EAAE,UAAU;iBACpB;gBACD,WAAW,EAAE,CAAC,wFAAS,CAAC;aAC3B;SACJ;KACJ;CAEJ,CAAC;AAMF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAJ1B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC/C,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ","file":"app-modules-cliente-cliente-module.js","sourcesContent":["module.exports = \"<mat-dialog-content>\\r\\n  <h2 mat-dialog-title>{{title}}</h2>\\r\\n\\r\\n\\r\\n  <form #qualificadorForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\"  fxLayoutAlign=\\\" center\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Código</mat-label>\\r\\n        <input uppercase matInput [(ngModel)]=\\\"cliente.codigo\\\" name=\\\"codigo\\\" [disabled]=\\\"true\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Cliente</mat-label>\\r\\n        <input uppercase uppercase required [(ngModel)]=\\\"cliente.cliente\\\" name=\\\"cliente\\\" matInput maxlength=\\\"144\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-radio-group required [(ngModel)]=\\\"cliente.sexo\\\" name=\\\"sexo\\\" aria-label=\\\"Sexo\\\">\\r\\n        <mat-radio-button value=\\\"Masculino\\\">Masculino</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"Feminino\\\" class=\\\"push-left-sm\\\">Feminino</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\" fxLayoutAlign=\\\" center\\\">\\r\\n\\r\\n      <mat-checkbox  [(ngModel)]=\\\"cliente.isEstrangeiro\\\" name=\\\"isEstrangeiro\\\">Estrangeiro ?</mat-checkbox>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>CPF</mat-label>\\r\\n        <input uppercase uppercase [required]=\\\"!cliente.isEstrangeiro\\\" [textMask]=\\\"{mask: maskCpf, guide: false}\\\" [(ngModel)]=\\\"cliente.cpf\\\"\\r\\n          name=\\\"cpf\\\" matInput maxlength=\\\"144\\\"\\r\\n          pattern=\\\"([0-9]{2}[\\\\.]?[0-9]{3}[\\\\.]?[0-9]{3}[\\\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\\\.]?[0-9]{3}[\\\\.]?[0-9]{3}[-]?[0-9]{2})\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"data-with-double-suffix\\\">\\r\\n        <mat-label>Data de nascimento *</mat-label>\\r\\n        <input matInput required [max]=\\\"dataHoje\\\" [matDatepicker]=\\\"dataNascimento\\\" [(ngModel)]=\\\"cliente.dataNascimento\\\" name=\\\"dataNascimento\\\" disabled>\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"dataNascimento\\\" ></mat-datepicker-toggle>\\r\\n        <button *ngIf=\\\"cliente.dataNascimento && !cliente.created\\\"  matSuffix mat-icon-button (click)=\\\"cliente.dataNascimento = null; \\\" matTooltip=\\\"Remover data de nascimento\\\">\\r\\n          <mat-icon>clear</mat-icon>\\r\\n        </button>\\r\\n        <mat-datepicker #dataNascimento disabled=\\\"false\\\"></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Celular</mat-label>\\r\\n        <input uppercase uppercase required [textMask]=\\\"{mask: maskCelular, guide: false}\\\" [(ngModel)]=\\\"cliente.celular\\\"\\r\\n          matInput name=\\\"celular\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Telefone</mat-label>\\r\\n        <input uppercase uppercase maxlength=\\\"50\\\" [textMask]=\\\"{mask: maskTelefone, guide:false}\\\" matInput\\r\\n          name=\\\"telefone\\\" [(ngModel)]=\\\"cliente.telefone\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>E-mail</mat-label>\\r\\n        <input uppercase uppercase [(ngModel)]=\\\"cliente.email\\\" email=\\\"true\\\" name=\\\"email\\\" type=\\\"email\\\" matInput\\r\\n          maxlength=\\\"144\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Número</mat-label>\\r\\n        <input uppercase required matInput [textMask]=\\\"{mask: masks.getNumbersOnlyMask(5), guide: false}\\\"\\r\\n          [(ngModel)]=\\\"cliente.numero\\\" name=\\\"numero\\\" >\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Bairro</mat-label>\\r\\n        <input uppercase required matInput [(ngModel)]=\\\"cliente.bairro\\\" maxlength=\\\"144\\\" name=\\\"bairro\\\" >\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Endereço</mat-label>\\r\\n        <input uppercase uppercase [(ngModel)]=\\\"cliente.endereco\\\" required  name=\\\"endereco\\\" matInput maxlength=\\\"144\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex>\\r\\n      \\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Complemento</mat-label>\\r\\n        <input uppercase uppercase [(ngModel)]=\\\"cliente.complemento\\\" name=\\\"complemento\\\" matInput maxlength=\\\"144\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\" center\\\">\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"cliente.cidade\\\" fxLayoutAlign=\\\" start\\\" fxLayout=\\\"column\\\">\\r\\n        <label style=\\\"margin-bottom: 5px;font-weight: bold;\\\">País</label>\\r\\n        <label>{{cliente?.cidade?.estado?.pais?.pais}}</label>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"cliente.cidade\\\" fxLayoutAlign=\\\" start\\\" fxLayout=\\\"column\\\" class=\\\"push-left-md push-right-md\\\">\\r\\n        <label style=\\\"margin-bottom: 5px;font-weight: bold;\\\">Estado</label>\\r\\n        <label>{{cliente?.cidade?.estado?.estado}}</label>\\r\\n      </div>\\r\\n\\r\\n      <auto-complete-with-redirect\\r\\n          fxFlex\\r\\n          title=\\\"Cidade\\\"\\r\\n          key=\\\"codigo\\\"\\r\\n          link=\\\"cidade\\\"\\r\\n          displayKey=\\\"cidade\\\"\\r\\n          [displayId]=\\\"true\\\"\\r\\n          [list]=\\\"{values: cidades}\\\"\\r\\n          [classes]=\\\"required-class-cidade\\\"\\r\\n          [itemSelected]=\\\"{selected: cliente.cidade}\\\"\\r\\n          (onFilterChange)=\\\"onListCidades($event)\\\"\\r\\n          (onSelect)=\\\"cliente.cidade = $event\\\"\\r\\n          (onDelete)=\\\"cliente.cidade = null\\\"\\r\\n      >\\r\\n      </auto-complete-with-redirect>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <auto-complete-with-redirect\\r\\n          fxFlex\\r\\n          title=\\\"Condição de pagamento\\\"\\r\\n          link=\\\"condicao-pagamento\\\"\\r\\n          [classes]=\\\"'required-class-condicao-pagamento'\\\"\\r\\n          key=\\\"codigo\\\"\\r\\n          displayKey=\\\"condicaoPagamento\\\"\\r\\n          [displayId]=\\\"true\\\"\\r\\n          [list]=\\\"{values: condicoesPagamento}\\\"\\r\\n          [itemSelected]=\\\"{selected: cliente.condicaoPagamento}\\\"\\r\\n          (onFilterChange)=\\\"onListCondicoesPagamento($event)\\\"\\r\\n          (onSelect)=\\\"cliente.condicaoPagamento = $event\\\"\\r\\n          (onDelete)=\\\"cliente.condicaoPagamento = null\\\"\\r\\n      >\\r\\n      </auto-complete-with-redirect>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\r\\n  <div fxLayout=\\\"column\\\">\\r\\n    <label> <label style=\\\"font-weight: bold\\\">Data de criação:</label>\\r\\n      {{ cliente.created ? (cliente.created | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n    <label class=\\\"push-top-sm \\\"><label style=\\\"font-weight: bold\\\">Data de atualização :</label>\\r\\n      {{ cliente.updated ? (cliente.updated | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <button (click)=\\\"onSubmit(qualificadorForm)\\\" mat-raised-button class=\\\"white-btn\\\"\\r\\n      color=\\\"primary\\\">\\r\\n      SALVAR\\r\\n    </button>\\r\\n    <button mat-dialog-close mat-raised-button class=\\\"white-btn\\r\\n  push-left-md bgc-grey-800\\\">\\r\\n      CANCELAR\\r\\n    </button>\\r\\n  </div>\\r\\n</mat-dialog-actions>\"","module.exports = \"<mat-toolbar class=\\\"toolbar-default\\\">\\r\\n\\t<mat-toolbar-row>\\r\\n\\t\\t<mat-form-field [floatLabel]=\\\"'never'\\\" style=\\\"width: 80vh; \\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>CLIENTE</mat-label>\\r\\n\\t\\t\\t<input uppercase matInput maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.cliente\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<span flex></span>\\r\\n\\t\\t<button color=\\\"primary\\\" (click)=\\\"openForm()\\\" class=\\\"white-btn\\\" mat-raised-button>ADICIONAR NOVO CLIENTE</button>\\r\\n\\t</mat-toolbar-row>\\r\\n\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\t\\t<button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"onListClientes()\\\" mat-raised-button\\r\\n\\t\\t\\ttype=\\\"submit\\\">CONSULTAR</button>\\r\\n\\t\\t<button color=\\\"accent\\\" class=\\\"white-btn\\\" (click)=\\\"filters.cliente = ''; onListClientes()\\\"\\r\\n\\t\\t\\tmat-raised-button>LIMPAR\\r\\n\\t\\t\\tFILTROS</button>\\r\\n\\t</mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n\\r\\n\\t<td-data-table *ngIf=\\\"pageRequest?.content?.length > 0\\\" #dataTable [data]=\\\"pageRequest.content\\\"\\r\\n\\t\\t[columns]=\\\"tableColumns\\\">\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"cliente\\\" let-cliente=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ cliente?.cliente}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"celular\\\" let-cliente=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ cliente?.celular}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"cpf\\\" let-cliente=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ cliente?.cpf}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"situacao\\\" let-cliente=\\\"row\\\">\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"cliente?.situacao\\\" class=\\\"tc-green-700\\\" matTooltip=\\\"Ativado\\\">check_circle</mat-icon>\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"!cliente?.situacao\\\" matTooltip=\\\"Desativado\\\" class=\\\"tc-red-700\\\">block</mat-icon>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"opcoes\\\" let-cliente=\\\"row\\\">\\r\\n\\r\\n\\t\\t\\t<button matTooltip=\\\"Editar funcionário\\\" stopPropagation\\r\\n\\t\\t\\tclass=\\\"tc-grey-700 edit-button-hover\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); openForm(cliente)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"edit-icon\\\">edit</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"!cliente.situacao\\\" matTooltip=\\\"Ativar cliente\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoCliente(cliente)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 active-button-hover\\\">check_circle_outline</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"cliente.situacao\\\" matTooltip=\\\"Excluir/Desativar cliente\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoCliente(cliente)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 delete-button-hover\\\">block</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t</td-data-table>\\r\\n\\r\\n\\t<td-paging-bar #pagingBar [pageSize]=\\\"pageRequest.pageable.size\\\" [total]=\\\"pageRequest.totalElements\\\"\\r\\n\\t\\t(change)=\\\"page($event)\\\" *ngIf=\\\"pageRequest.content != null && pageRequest.content.length\\\">\\r\\n\\t\\t<span td-paging-bar-label hide-xs>Registros por página:</span>\\r\\n\\t\\t<mat-select [style.width.px]=\\\"50\\\" [(ngModel)]=\\\"pageRequest.pageable.size\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let size of [10,50,100]\\\" [value]=\\\"size\\\">\\r\\n\\t\\t\\t\\t{{size}}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t{{pagingBar.range}} <span hide-xs>de {{pagingBar.total}}</span>\\r\\n\\t</td-paging-bar>\\r\\n\\r\\n\\t<div *ngIf=\\\"pageRequest?.content?.length == 0\\\" class=\\\"pad-md\\\" fxLayoutAlign=\\\"center \\\">\\r\\n\\t\\t<label>Nenhum registro encontrado.</label>\\r\\n\\t</div>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2xpZW50ZS9jbGllbnRlLWZvcm0vY2xpZW50ZS1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Cliente, Cidade, Estado, Pais, CondicaoPagamento } from './../../../../generated/entities';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ClienteService, CidadeService, EstadoService, PaisService, CondicaoPagamentoService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { TextMasks } from 'src/app/common/mask/text-masks';\r\n\r\n@Component({\r\n  selector: 'app-cliente-form',\r\n  templateUrl: './cliente-form.component.html',\r\n  styleUrls: ['./cliente-form.component.scss']\r\n})\r\nexport class ClienteFormComponent implements OnInit\r\n{\r\n\r\n\r\n  /*-------------------------------------------------------------------\r\n    *                           ATTRIBUTES\r\n    *-------------------------------------------------------------------*/\r\n\r\n  public title = \"\";\r\n\r\n  public cliente: Cliente = { codigo: 0, sexo: 'Masculino' };\r\n\r\n  public maskCpf = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\r\n\r\n  public maskTelefone = ['(', /\\d/, /\\d/, ')', ' ', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n\r\n  public maskCelular = ['(', /\\d/, /\\d/, ')', ' ', /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n\r\n  public cidades: Cidade[];\r\n\r\n  public condicoesPagamento: CondicaoPagamento[];\r\n\r\n  public dataHoje = new Date();\r\n\r\n  public masks = TextMasks;\r\n\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private openSnackBarService: OpenSnackBarService,\r\n    public dialogRef: MatDialogRef<ClienteFormComponent>,\r\n    private cidadeService: CidadeService,\r\n    private condicaoPagamentoService: CondicaoPagamentoService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  )\r\n  {\r\n    if (data.codigo != null)\r\n    {\r\n      this.onFindClienteById(data.codigo);\r\n    }\r\n\r\n    this.onListCidades(\"\");\r\n    this.onListCondicoesPagamento(\"\");\r\n\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    if (this.data.codigo)\r\n      this.title = \"Alterar cliente\";\r\n    else\r\n      this.title = \"Inserir cliente\";\r\n\r\n  }\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n\r\n  private onFindClienteById(id: any)\r\n  {\r\n    this.clienteService.findClienteById(id).subscribe(cliente =>\r\n    {\r\n      this.cliente = cliente;\r\n    }, err => this.openSnackBarService.openError(err.message))\r\n\r\n  }\r\n\r\n  public onSubmit(form): void\r\n  {\r\n\r\n    if (!this.cliente.cidade)\r\n    {\r\n      this.openSnackBarService.openError('O campo cidade deve ser preenchido.');\r\n      return;\r\n    }\r\n\r\n    if (!this.cliente.condicaoPagamento)\r\n    {\r\n      this.openSnackBarService.openError('O campo condição de pagamento deve ser preenchido.');\r\n      return;\r\n    }\r\n\r\n    if (!form.invalid && this.cliente.dataNascimento)\r\n    {\r\n\r\n      this.cliente.estado = this.cliente.cidade.estado;\r\n      this.cliente.pais = this.cliente.cidade.estado.pais;\r\n\r\n      if (this.cliente.cpf && typeof this.cliente.cpf == \"string\")\r\n      {\r\n        this.cliente.cpf = this.cliente.cpf.replace(/\\.|-/gi, '');\r\n\r\n        if (!this.validaCPF(this.cliente.cpf))\r\n        {\r\n          this.openSnackBarService.openError('CPF inválido.');\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (this.cliente.telefone)\r\n      {\r\n        var numb = this.cliente.telefone.match(/\\d/g) as any;\r\n        numb = numb.join(\"\").toString();\r\n\r\n        if (numb.length != 10)\r\n        {\r\n          this.openSnackBarService.openError('telefone inválido.');\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (this.cliente.celular) \r\n      {\r\n        var numb = this.cliente.celular.match(/\\d/g) as any;\r\n        numb = numb.join(\"\").toString();\r\n\r\n        if (numb.length != 11)\r\n        {\r\n          this.openSnackBarService.openError('celular inválido.');\r\n          return;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        this.cliente.telefone = this.cliente.telefone.replace(/\\.|-/gi, '');\r\n        this.cliente.celular = this.cliente.celular.replace(/\\.|-/gi, '');\r\n\r\n      }\r\n\r\n      if (!this.cliente.codigo)\r\n      {\r\n        this.clienteService.insertCliente(this.cliente).subscribe(cliente =>\r\n        {\r\n          this.openSnackBarService.openSuccess(\"Cliente salvo\");\r\n          this.dialogRef.close(this.cliente);\r\n        }, err => this.openSnackBarService.openError(err.message))\r\n      }\r\n      else\r\n      {\r\n        this.clienteService.updateCliente(this.cliente).subscribe(cliente =>\r\n        {\r\n          this.openSnackBarService.openSuccess(\"Cliente atualizado\");\r\n          this.dialogRef.close(this.cliente);\r\n        }, err => this.openSnackBarService.openError(err.message))\r\n      }\r\n\r\n    }\r\n    else{\r\n      this.openSnackBarService.openError(`Todos os campos com * devem ser preenchidos.`)\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n  private validaCPF(cpf)\r\n  {\r\n    cpf = cpf.replace(/[^\\d]+/g, '');\r\n    if (cpf == '') return false;\r\n    // Elimina CPFs invalidos conhecidos\r\n    if (cpf.length != 11 ||\r\n      cpf == \"00000000000\" ||\r\n      cpf == \"11111111111\" ||\r\n      cpf == \"22222222222\" ||\r\n      cpf == \"33333333333\" ||\r\n      cpf == \"44444444444\" ||\r\n      cpf == \"55555555555\" ||\r\n      cpf == \"66666666666\" ||\r\n      cpf == \"77777777777\" ||\r\n      cpf == \"88888888888\" ||\r\n      cpf == \"99999999999\")\r\n      return false;\r\n    // Valida 1o digito\r\n    let add = 0;\r\n    for (let i = 0; i < 9; i++)\r\n      add += parseInt(cpf.charAt(i)) * (10 - i);\r\n    let rev = 11 - (add % 11);\r\n    if (rev == 10 || rev == 11)\r\n      rev = 0;\r\n    if (rev != parseInt(cpf.charAt(9)))\r\n      return false;\r\n    // Valida 2o digito\r\n    add = 0;\r\n    for (let i = 0; i < 10; i++)\r\n      add += parseInt(cpf.charAt(i)) * (11 - i);\r\n    rev = 11 - (add % 11);\r\n    if (rev == 10 || rev == 11)\r\n      rev = 0;\r\n    if (rev != parseInt(cpf.charAt(10)))\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n\r\n  public onListCidades(filter)\r\n  {\r\n    this.cidadeService.listCidadesByFilters(filter ? filter : \"\", null).subscribe(page =>\r\n    {\r\n\r\n      this.cidades = page.content.filter(c => c.situacao);\r\n    })\r\n  }\r\n\r\n  public displayFnCidade(cidade?: Cidade): string | undefined\r\n  {\r\n    return cidade ? cidade.cidade : undefined;\r\n  }\r\n\r\n  public onListCondicoesPagamento(filter)\r\n  {\r\n    var codigo = null;\r\n    var condicaoPagamento = \"\";\r\n\r\n    if (isNaN(parseInt(filter))) condicaoPagamento = filter ? filter : \"\";\r\n    else codigo = parseInt(filter)\r\n\r\n    this.condicaoPagamentoService.listCondicaoPagamentosByFilters(codigo, condicaoPagamento, null).subscribe(page =>\r\n    {\r\n      this.condicoesPagamento = page.content.filter(c => c.situacao);\r\n    })\r\n  }\r\n\r\n  public displayFnCondicaoPagamento(condicaoPagamento?: CondicaoPagamento): number | undefined\r\n  {\r\n    return condicaoPagamento ? condicaoPagamento.codigo : undefined;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2xpZW50ZS9jbGllbnRlLWxpc3QvY2xpZW50ZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ClienteFormComponent } from '../cliente-form/cliente-form.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TdDialogService, ITdDataTableColumn, IPageChangeEvent } from '@covalent/core';\r\nimport { PaginationService } from 'src/app/common/pagination/pagination.service';\r\nimport { ClienteService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { Cliente } from 'src/generated/entities';\r\n\r\n\r\n@Component({\r\n    selector: 'app-cliente-list',\r\n    templateUrl: './cliente-list.component.html',\r\n    styleUrls: ['./cliente-list.component.scss']\r\n})\r\nexport class ClienteListComponent implements OnInit\r\n{\r\n\r\n    /*-------------------------------------------------------------------\r\n      *                           ATTRIBUTES\r\n      *-------------------------------------------------------------------*/\r\n\r\n    public pageRequest: any = [];\r\n\r\n    public filters = {\r\n        cliente: '',\r\n\r\n    }\r\n\r\n    /**\r\n       * Colunas da Grid\r\n       */\r\n    public tableColumns: ITdDataTableColumn[] = [\r\n        { name: 'codigo', label: 'CÓDIGO' },\r\n        { name: 'cliente', label: 'CLIENTE', sortable: false },\r\n        { name: 'celular', label: 'CELULAR', sortable: false },\r\n        { name: 'cpf', label: 'CPF', sortable: false },\r\n        { name: 'situacao', label: 'SITUAÇÃO', sortable: false },\r\n        { name: 'opcoes', label: 'OPÇÕES', tooltip: 'OPÇÕES', sortable: false, width: 300 }\r\n    ];\r\n\r\n    constructor(public dialog: MatDialog,\r\n        private _dialogService: TdDialogService,\r\n        private paginationService: PaginationService,\r\n        private openSnackBarService: OpenSnackBarService,\r\n        private clienteService: ClienteService) \r\n    {\r\n        this.pageRequest = paginationService.pageRequest('titulo', 'ASC', 10);\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.onListClientes();\r\n    }\r\n\r\n    public onListClientes(filters: Boolean = true): void\r\n    {\r\n        this.clienteService.listClientesByFilters(\r\n            this.filters.cliente,\r\n        ).subscribe((result) =>\r\n        {\r\n            this.pageRequest = this.paginationService.fixPageRequest(result, this.pageRequest);\r\n        }), (error) => { this.openSnackBarService.openError(error.message) }\r\n    }\r\n        \r\n\r\n\r\n    public openForm(cliente)\r\n    {\r\n        const dialogRef = this.dialog.open(ClienteFormComponent, {\r\n            width: '900px',\r\n            height: 'auto',\r\n            data: { codigo: cliente ? cliente.codigo : null }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(clienteSaved =>\r\n        {\r\n            if(clienteSaved) this.onListClientes();\r\n        });\r\n    }\r\n\r\n    public atualizarSituacaoCliente(cliente: Cliente)\r\n    {\r\n        if(cliente.situacao)\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja excluir este cliente ?\",\r\n                title: \"Excluir cliente\" ,\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.clienteService.deleteCliente(cliente.codigo).subscribe( result => {\r\n                        this.openSnackBarService.openSuccess('Cliente excluído com sucesso.');\r\n                        this.onListClientes();\r\n                    }, err => {\r\n\r\n\r\n                        this._dialogService.openConfirm({\r\n                            message: \"Não foi possível excluir este cliente pois o mesmo está relacionado a outro registro. Deseja desativar ?\",\r\n                            title: \"Desativar cliente\",\r\n                            cancelButton: 'CANCELAR',\r\n                            acceptButton: 'CONFIRMAR',\r\n                            width: '500px'\r\n                        }).afterClosed().subscribe((accept: boolean) =>\r\n                        {\r\n                            if (accept)\r\n                            {\r\n                                this.clienteService.updateSituacaoCliente(cliente.codigo, !cliente.situacao).subscribe( result => {\r\n                                    this.openSnackBarService.openSuccess('Cliente desativado com sucesso.');\r\n                                    this.onListClientes();\r\n                                }, err => this.openSnackBarService.openError(err.message))\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja ativar este cliente ?\",\r\n                title: \"Ativar cliente\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.clienteService.updateSituacaoCliente(cliente.codigo, !cliente.situacao).subscribe( result => {\r\n                        this.openSnackBarService.openSuccess('Cliente ativado com sucesso.');\r\n                        this.onListClientes();\r\n                    }, err => this.openSnackBarService.openError(err.message))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public page(pagingEvent: IPageChangeEvent)\r\n    {\r\n        this.pageRequest.pageable.page = pagingEvent.page - 1;\r\n        this.pageRequest.pageable.size = pagingEvent.pageSize;\r\n\r\n        this.onListClientes();\r\n    }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ClienteListComponent } from './cliente-list/cliente-list.component';\r\nimport { ClienteFormComponent } from './cliente-form/cliente-form.component';\r\nimport { SharedCommonModule } from 'src/app/common/shared-common.module';\r\nimport { ClienteRouting } from './cliente.routing';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClienteListComponent,\r\n    ClienteFormComponent,\r\n  ],\r\n  imports: [\r\n    ClienteRouting,\r\n    SharedCommonModule\r\n  ],\r\n  exports: [\r\n    ClienteListComponent,\r\n    ClienteFormComponent,\r\n    ClienteRouting\r\n  ],\r\n  entryComponents: [\r\n    ClienteFormComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class ClienteModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ClienteListComponent } from './cliente-list/cliente-list.component';\r\nimport { AuthGuard } from 'src/app/common/autenticacao/auth-guard.service';\r\n\r\nconst clienteRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: ClienteListComponent,\r\n                data: {\r\n                    title: 'Clientes'\r\n                },\r\n                canActivate: [AuthGuard]\r\n            }\r\n        ]\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(clienteRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ClienteRouting { }\r\n"],"sourceRoot":""}