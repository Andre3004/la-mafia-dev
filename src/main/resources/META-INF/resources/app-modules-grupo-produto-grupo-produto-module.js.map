{"version":3,"sources":["webpack:///./src/app/modules/grupo-produto/grupo-produto-form/grupo-produto-form.component.html","webpack:///./src/app/modules/grupo-produto/grupo-produto-list/grupo-produto-list.component.html","webpack:///./src/app/modules/grupo-produto/grupo-produto-form/grupo-produto-form.component.scss","webpack:///./src/app/modules/grupo-produto/grupo-produto-form/grupo-produto-form.component.ts","webpack:///./src/app/modules/grupo-produto/grupo-produto-list/grupo-produto-list.component.scss","webpack:///./src/app/modules/grupo-produto/grupo-produto-list/grupo-produto-list.component.ts","webpack:///./src/app/modules/grupo-produto/grupo-produto.module.ts","webpack:///./src/app/modules/grupo-produto/grupo-produto.routing.ts"],"names":[],"mappings":"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","file":"app-modules-grupo-produto-grupo-produto-module.js","sourcesContent":["module.exports = \"<div fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <h2 mat-dialog-title>{{title}}</h2>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content>\\r\\n    <form #qualificadorForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\" fxLayoutAlign=\\\" center\\\">\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>CÃ³digo</mat-label>\\r\\n                <input uppercase matInput [(ngModel)]=\\\"grupoProduto.codigo\\\" [disabled]=\\\"true\\\" name=\\\"codigo\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Grupo de produto</mat-label>\\r\\n                <input uppercase required [(ngModel)]=\\\"grupoProduto.grupoProduto\\\" name=\\\"nome\\\" matInput maxlength=\\\"144\\\"\\r\\n                    placeholder=\\\"Digite o nome do grupo\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-checkbox fxFlex [(ngModel)]=\\\"grupoProduto.exigeAno\\\" name=\\\"exigeAno\\\">Exige ano ?</mat-checkbox>\\r\\n\\r\\n           \\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"push-top-sm\\\" fxFlex\\r\\n            style=\\\"background-color: #b71c1c; color: white; font-weight: bold;border-radius: 30px;\\\"\\r\\n            fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <label *ngIf=\\\"!fotoImage && !grupoProduto.anexoUuid\\\" style=\\\"max-width: 400px;\\\"\\r\\n                class=\\\"text-truncate push-left-md\\\">\\r\\n                Selecione o arquivo...\\r\\n            </label>\\r\\n\\r\\n\\r\\n            <label *ngIf=\\\"grupoProduto?.nomeArquivo\\\" style=\\\"max-width: 400px;\\\" class=\\\"text-truncate push-left-md\\\">\\r\\n                {{grupoProduto?.nomeArquivo}}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"push-right-sm\\\">\\r\\n                <button (click)=\\\"fotoInput.click()\\\" *ngIf=\\\"!fotoImage && !grupoProduto?.anexoUuid\\\" mat-icon-button\\r\\n                    matTooltip=\\\"Adicionar anexo\\\">\\r\\n                    <mat-icon>attach_file</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button *ngIf=\\\"fotoImage || grupoProduto?.anexoUuid\\\" (click)=\\\"removeAnexo()\\\" matTooltip=\\\"Remover anexo\\\"\\r\\n                    mat-icon-button>\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button *ngIf=\\\"grupoProduto.anexoUuid\\\" matTooltip=\\\"Download anexo\\\" (click)=\\\"downloadFile()\\\"\\r\\n                    mat-icon-button>\\r\\n                    <mat-icon>file_download</mat-icon>\\r\\n                </button>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <input hidden type=\\\"file\\\" #fotoInput (change)=\\\"setGrupoProdutoAnexo($event)\\\">\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n        <label> <label style=\\\"font-weight: bold\\\">Data de criaÃ§Ã£o:</label>\\r\\n            {{ grupoProduto.created ? (grupoProduto.created | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n        <label class=\\\"push-top-sm \\\"><label style=\\\"font-weight: bold\\\">Data de atualizaÃ§Ã£o :</label>\\r\\n            {{ grupoProduto.updated ? (grupoProduto.updated | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n    <button (click)=\\\"onSubmit(qualificadorForm)\\\" mat-raised-button class=\\\"white-btn\\\"\\r\\n        color=\\\"primary\\\">\\r\\n        SALVAR\\r\\n    </button>\\r\\n    <button mat-dialog-close mat-raised-button class=\\\"white-btn\\r\\n    push-left-md bgc-grey-800\\\">\\r\\n        CANCELAR\\r\\n    </button>\\r\\n    </div>\\r\\n</mat-dialog-actions>\"","module.exports = \"<mat-toolbar class=\\\"toolbar-default\\\">\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\t\\t<mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>Grupo de produto</mat-label>\\r\\n\\t\\t\\t<input matInput uppercase placeholder=\\\"Pesquisar por nome\\\" maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.nome\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div fxFlex></div>\\r\\n\\r\\n\\t\\t<button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"openForm()\\\" mat-raised-button>ADICIONAR\\r\\n\\t\\t\\tNOVO GRUPO DE PRODUTO</button>\\r\\n\\t</mat-toolbar-row>\\r\\n\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\t\\t<button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"onListGrupoProdutos()\\\" mat-raised-button\\r\\n\\t\\t\\ttype=\\\"submit\\\">CONSULTAR</button>\\r\\n\\t\\t<button color=\\\"accent\\\" class=\\\"white-btn\\\" (click)=\\\"clearFilters()\\\" mat-raised-button>LIMPAR FILTROS</button>\\r\\n\\t</mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n\\r\\n\\t<td-data-table *ngIf=\\\"pageRequest?.content?.length > 0\\\" #dataTable [data]=\\\"pageRequest.content\\\"\\r\\n\\t\\t[columns]=\\\"tableColumns\\\" [clickable]=\\\"true\\\">\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"nome\\\" let-grupoProduto=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ grupoProduto?.grupoProduto}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"situacao\\\" let-grupoProduto=\\\"row\\\">\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"grupoProduto?.situacao\\\" class=\\\"tc-green-700\\\" matTooltip=\\\"Ativado\\\">check_circle</mat-icon>\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"!grupoProduto?.situacao\\\" matTooltip=\\\"Desativado\\\" class=\\\"tc-red-700\\\">block</mat-icon>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"opcoes\\\" let-grupoProduto=\\\"row\\\">\\r\\n\\r\\n\\t\\t\\t<button matTooltip=\\\"Editar grupo de produto\\\" (click)=\\\"$event.stopPropagation(); openForm(grupoProduto)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 edit-button-hover\\\">edit</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"!grupoProduto.situacao\\\" matTooltip=\\\"Ativar grupo de produto\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoGrupoProduto(grupoProduto)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 active-button-hover\\\">check_circle_outline</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"grupoProduto.situacao\\\" matTooltip=\\\"Excluir/Desativar grupo de produto\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoGrupoProduto(grupoProduto)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 delete-button-hover\\\">block</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t</td-data-table>\\r\\n\\r\\n\\t<td-paging-bar #pagingBar [pageSize]=\\\"pageRequest.pageable.size\\\" [total]=\\\"pageRequest.totalElements\\\"\\r\\n\\t\\t(change)=\\\"page($event)\\\" *ngIf=\\\"pageRequest.content != null && pageRequest.content.length\\\">\\r\\n\\t\\t<span td-paging-bar-label hide-xs>Registros por pÃ¡gina:</span>\\r\\n\\t\\t<mat-select [style.width.px]=\\\"50\\\" [(ngModel)]=\\\"pageRequest.pageable.size\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let size of [10,50,100]\\\" [value]=\\\"size\\\">\\r\\n\\t\\t\\t\\t{{size}}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t{{pagingBar.range}} <span hide-xs>de {{pagingBar.total}}</span>\\r\\n\\t</td-paging-bar>\\r\\n\\r\\n\\t<div *ngIf=\\\"pageRequest?.content?.length == 0\\\" class=\\\"pad-md\\\" fxLayoutAlign=\\\"center \\\">\\r\\n\\t\\t<label>Nenhum registro encontrado.</label>\\r\\n\\t</div>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ3J1cG8tcHJvZHV0by9ncnVwby1wcm9kdXRvLWZvcm0vZ3J1cG8tcHJvZHV0by1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { GrupoProdutoService, ArquivoService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { GrupoProduto } from 'src/generated/entities';\r\n\r\n@Component({\r\n  selector: 'app-grupo-produto-form',\r\n  templateUrl: './grupo-produto-form.component.html',\r\n  styleUrls: ['./grupo-produto-form.component.scss']\r\n})\r\nexport class GrupoProdutoFormComponent implements OnInit\r\n{ \r\n  /*-------------------------------------------------------------------\r\n    *                           ATTRIBUTES\r\n    *-------------------------------------------------------------------*/\r\n\r\n  public title = \"\";\r\n\r\n  public grupoProduto: GrupoProduto = { codigo:0, exigeAno: false };\r\n\r\n  public fotoImage: any;\r\n\r\n  constructor(\r\n    private grupoProdutoService: GrupoProdutoService,\r\n    private openSnackBarService: OpenSnackBarService,\r\n    public dialogRef: MatDialogRef<GrupoProdutoFormComponent>,\r\n    private arquivoService: ArquivoService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  )\r\n  {\r\n    if (data.grupoProdutoId != null)\r\n    {\r\n      this.onFindGrupoProdutoById(data.grupoProdutoId);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    if (this.data.grupoProdutoId)\r\n      this.title = \"Alterar grupo de produto\";\r\n    else\r\n      this.title = \"Inserir grupo de produto\";\r\n  }\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n\r\n  private onFindGrupoProdutoById(grupoProdutoId: any)\r\n  {\r\n    this.grupoProdutoService.findGrupoProdutoById(grupoProdutoId).subscribe(grupoProduto =>\r\n    {\r\n      this.grupoProduto = grupoProduto;\r\n    }, err => this.openSnackBarService.openError(err.message))\r\n\r\n  }\r\n\r\n  public onSubmit(form): void\r\n  {\r\n\r\n    if(form.invalid){\r\n      this.openSnackBarService.openError(`Todos os campos com * devem ser preenchidos.`);\r\n      return;\r\n    }\r\n\r\n    let anexoOld = null;\r\n\r\n    if(this.grupoProduto.anexo && typeof(this.grupoProduto.anexo) == 'string')\r\n    {\r\n      anexoOld = this.grupoProduto.anexo;\r\n      this.grupoProduto.anexo = null;\r\n    }\r\n\r\n    if (!this.grupoProduto.codigo)\r\n    {\r\n      this.grupoProdutoService.insertGrupoProduto(this.grupoProduto).subscribe(grupoProduto =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Grupo de produto salvo com sucesso.\");\r\n        this.dialogRef.close(this.grupoProduto);\r\n      }, err => {\r\n        \r\n        if(anexoOld) this.grupoProduto.anexo = anexoOld;\r\n\r\n        this.openSnackBarService.openError(err.message)\r\n\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.grupoProdutoService.updateGrupoProduto(this.grupoProduto).subscribe(grupoProduto =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Grupo de produto atualizado com sucesso.\");\r\n        this.dialogRef.close(this.grupoProduto);\r\n      }, err => {\r\n        if(anexoOld) this.grupoProduto.anexo = anexoOld;\r\n        this.openSnackBarService.openError(err.message)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           FOTO\r\n  *-------------------------------------------------------------------*/\r\n\r\n\r\n\r\n  public removeAnexo()\r\n  {\r\n    this.grupoProduto.anexo = null;\r\n    this.grupoProduto.anexoUuid = null;\r\n    this.fotoImage = null;\r\n    this.grupoProduto.nomeArquivo = null;\r\n  }\r\n\r\n  public downloadFile()\r\n  {\r\n    this.arquivoService.downloadArquivoByUuid(this.grupoProduto.anexoUuid).subscribe(result =>\r\n    {\r\n      window.location.href = result;\r\n    }, (exception) => this.openSnackBarService.openError(exception.message))\r\n  }\r\n\r\n  public setGrupoProdutoAnexo(event)\r\n  {\r\n    if (event.target.files[0])\r\n    {\r\n      if (event.target.files[0].size <= 10000000) //10MB\r\n      {\r\n        this.grupoProduto.anexo = event.target;\r\n\r\n        this.grupoProduto.nomeArquivo = event.target.files[0].name;\r\n\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = (event: any) =>\r\n        {\r\n          this.fotoImage = event.target.result;\r\n        };\r\n        this.grupoProduto.anexoUuid = null;\r\n        reader.readAsDataURL(event.target.files[0]);\r\n      }\r\n      else\r\n      {\r\n        this.openSnackBarService.openSuccess(\"O tamanho da foto nÃ£o pode ser maior que 10MB\");\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.grupoProduto.anexo = null;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ3J1cG8tcHJvZHV0by9ncnVwby1wcm9kdXRvLWxpc3QvZ3J1cG8tcHJvZHV0by1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GrupoProdutoFormComponent } from '../grupo-produto-form/grupo-produto-form.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TdDialogService, ITdDataTableColumn, IPageChangeEvent } from '@covalent/core';\r\nimport { PaginationService } from 'src/app/common/pagination/pagination.service';\r\nimport { GrupoProdutoService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { GrupoProduto } from 'src/generated/entities';\r\n\r\n\r\n@Component({\r\n    selector: 'app-grupo-produto-list',\r\n    templateUrl: './grupo-produto-list.component.html',\r\n    styleUrls: ['./grupo-produto-list.component.scss']\r\n})\r\nexport class GrupoProdutoListComponent implements OnInit\r\n{\r\n\r\n    /*-------------------------------------------------------------------\r\n      *                           ATTRIBUTES\r\n      *-------------------------------------------------------------------*/\r\n\r\n    public pageRequest: any = [];\r\n\r\n    public filters = {\r\n        nome: '',\r\n    }\r\n\r\n    /**\r\n       * Colunas da Grid\r\n       */\r\n    public tableColumns: ITdDataTableColumn[] = [\r\n        { name: 'codigo', label: 'CÃDIGO', sortable: false },\r\n        { name: 'nome', label: 'GRUPO DE PRODUTO', sortable: false },\r\n        { name: 'situacao', label: 'SITUAÃÃO', sortable: false },\r\n        { name: 'opcoes', label: 'OPÃÃES', tooltip: 'OPÃÃES', sortable: false, width: 150 }\r\n    ];\r\n\r\n    /**\r\n     * \r\n     * @param dialog \r\n     * @param _dialogService \r\n     * @param paginationService \r\n     * @param openSnackBarService \r\n     * @param grupoProdutoService \r\n     */\r\n    constructor(public dialog: MatDialog,\r\n        private _dialogService: TdDialogService,\r\n        private paginationService: PaginationService,\r\n        private openSnackBarService: OpenSnackBarService,\r\n        private grupoProdutoService: GrupoProdutoService) \r\n    {\r\n        this.pageRequest = paginationService.pageRequest('nome', 'ASC', 10);\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.onListGrupoProdutos();\r\n    }\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           BEHAVIORS\r\n    *-------------------------------------------------------------------*/\r\n\r\n    public openForm(grupoProduto)\r\n    {\r\n        const dialogRef = this.dialog.open(GrupoProdutoFormComponent, {\r\n            width: '800px',\r\n            height: 'auto',\r\n            data: { grupoProdutoId: grupoProduto ? grupoProduto.codigo : null }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(grupoProdutoSaved =>\r\n        {\r\n            if (grupoProdutoSaved) this.onListGrupoProdutos();\r\n        });\r\n    }\r\n\r\n\r\n    public atualizarSituacaoGrupoProduto(grupoProduto: GrupoProduto)\r\n    {\r\n        if (grupoProduto.situacao)\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja excluir esta grupo de produto ?\",\r\n                title: \"Excluir grupo de produto\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.grupoProdutoService.deleteGrupoProduto(grupoProduto.codigo).subscribe(result =>\r\n                    {\r\n                        this.openSnackBarService.openSuccess('Grupo de produto excluÃ­do com sucesso.');\r\n                        this.onListGrupoProdutos();\r\n                    }, err =>\r\n                    {\r\n\r\n\r\n                        this._dialogService.openConfirm({\r\n                            message: \"NÃ£o foi possÃ­vel excluir este grupo de produto pois o mesmo estÃ¡ relacionado a outro registro. Deseja desativar ?\",\r\n                            title: \"Desativar grupo de produto\",\r\n                            cancelButton: 'CANCELAR',\r\n                            acceptButton: 'CONFIRMAR',\r\n                            width: '500px'\r\n                        }).afterClosed().subscribe((accept: boolean) =>\r\n                        {\r\n                            if (accept)\r\n                            {\r\n                                this.grupoProdutoService.updateSituacaoGrupoProduto(grupoProduto.codigo, !grupoProduto.situacao).subscribe(result =>\r\n                                {\r\n                                    this.openSnackBarService.openSuccess('Grupo de produto desativado com sucesso.');\r\n                                    this.onListGrupoProdutos();\r\n                                }, err => this.openSnackBarService.openError(err.message))\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja ativar este grupo de produto ?\",\r\n                title: \"Ativar grupo de produto\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.grupoProdutoService.updateSituacaoGrupoProduto(grupoProduto.codigo, !grupoProduto.situacao).subscribe(result =>\r\n                    {\r\n                        this.openSnackBarService.openSuccess('Grupo de produto ativado com sucesso.');\r\n                        this.onListGrupoProdutos();\r\n                    }, err => this.openSnackBarService.openError(err.message))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           Listagem e filtros\r\n    *-------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * MÃ©todo responsÃ¡vel pela listagem dos avisos utilizando os filtros informados pelo grupoProduto\r\n     */\r\n    public onListGrupoProdutos(filters: Boolean = true): void\r\n    {\r\n        if (filters)\r\n        {\r\n            this.pageRequest.pageable.page = 0;\r\n        }\r\n\r\n        this.grupoProdutoService.listGrupoProdutosByFilters(\r\n            this.filters.nome,\r\n            null,\r\n            this.pageRequest.pageable\r\n        ).subscribe((result) =>\r\n        {\r\n            this.pageRequest = this.paginationService.fixPageRequest(result, this.pageRequest);\r\n        }), (error) => { this.openSnackBarService.openError(error.message) }\r\n    }\r\n\r\n    public clearFilters()\r\n    {\r\n        this.filters = {\r\n            nome: '',\r\n        }\r\n\r\n\r\n        this.onListGrupoProdutos();\r\n    }\r\n\r\n\r\n\r\n    public page(pagingEvent: IPageChangeEvent)\r\n    {\r\n        this.pageRequest.pageable.page = pagingEvent.page - 1;\r\n        this.pageRequest.pageable.size = pagingEvent.pageSize;\r\n\r\n        this.onListGrupoProdutos();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { GrupoProdutoListComponent } from './grupo-produto-list/grupo-produto-list.component';\r\nimport { GrupoProdutoRouting } from './grupo-produto.routing';\r\nimport { GrupoProdutoFormComponent } from './grupo-produto-form/grupo-produto-form.component';\r\nimport { SharedCommonModule } from 'src/app/common/shared-common.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GrupoProdutoListComponent,\r\n    GrupoProdutoFormComponent,\r\n  ],\r\n  imports: [\r\n    GrupoProdutoRouting,\r\n    SharedCommonModule\r\n  ],\r\n  exports: [\r\n    GrupoProdutoListComponent,\r\n    GrupoProdutoFormComponent,\r\n    GrupoProdutoRouting\r\n  ],\r\n  entryComponents: [\r\n    GrupoProdutoFormComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class GrupoProdutoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { GrupoProdutoListComponent } from './grupo-produto-list/grupo-produto-list.component';\r\nimport { AuthGuard } from 'src/app/common/autenticacao/auth-guard.service';\r\n\r\nconst grupoProdutoRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: GrupoProdutoListComponent,\r\n                data: {\r\n                    title: 'Grupos de produtos',\r\n                    onlyFranquiador: true\r\n                },\r\n                canActivate: [AuthGuard]\r\n            }\r\n        ]\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(grupoProdutoRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class GrupoProdutoRouting { }\r\n"],"sourceRoot":""}