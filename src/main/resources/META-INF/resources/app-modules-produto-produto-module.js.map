{"version":3,"sources":["webpack:///./src/app/modules/produto/produto-form/produto-form.component.html","webpack:///./src/app/modules/produto/produto-list/produto-list.component.html","webpack:///./src/app/modules/produto/produto-form/produto-form.component.scss","webpack:///./src/app/modules/produto/produto-form/produto-form.component.ts","webpack:///./src/app/modules/produto/produto-list/produto-list.component.scss","webpack:///./src/app/modules/produto/produto-list/produto-list.component.ts","webpack:///./src/app/modules/produto/produto.module.ts","webpack:///./src/app/modules/produto/produto.routing.ts"],"names":[],"mappings":"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","file":"app-modules-produto-produto-module.js","sourcesContent":["module.exports = \"<h2 mat-dialog-title>{{title}}</h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content>\\r\\n    <form #qualificadorForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Código</mat-label>\\r\\n                <input uppercase matInput [(ngModel)]=\\\"produto.codigo\\\" [disabled]=\\\"true\\\" name=\\\"codigo\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Produto</mat-label>\\r\\n                <input uppercase required [(ngModel)]=\\\"produto.produto\\\" [disabled]=\\\"isFranquiado\\\" name=\\\"nome\\\" matInput maxlength=\\\"144\\\"\\r\\n                    placeholder=\\\"Digite o nome do produto\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\" center\\\">\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Unidade comercial</mat-label>\\r\\n                <input uppercase  [(ngModel)]=\\\"produto.unidadeComercial\\\" name=\\\"unidadeComercial\\\" matInput\\r\\n                [disabled]=\\\"isFranquiado\\\"\\r\\n                    required\\r\\n                    maxlength=\\\"50\\\" placeholder=\\\"Digite a unidade comercial do produto\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <auto-complete-with-redirect fxFlex \\r\\n                style=\\\"margin-left: 30px\\\"\\r\\n                title=\\\"Grupo de produto\\\" \\r\\n                [classes]=\\\"required-class-grupo-produto\\\"\\r\\n                link=\\\"grupo-produto\\\" \\r\\n                key=\\\"codigo\\\" \\r\\n                displayKey=\\\"grupoProduto\\\"\\r\\n                [displayId]=\\\"true\\\" \\r\\n                [isDetail]=\\\"isFranquiado\\\"\\r\\n                [list]=\\\"{values: gruposProdutos}\\\" \\r\\n                [itemSelected]=\\\"{selected: produto.grupoProduto}\\\"\\r\\n                (onFilterChange)=\\\"onListGrupoProdutos($event)\\\" \\r\\n                (onSelect)=\\\"produto.grupoProduto = $event\\\"\\r\\n                (onDelete)=\\\"produto.grupoProduto = null\\\">\\r\\n            </auto-complete-with-redirect>\\r\\n\\r\\n\\r\\n\\r\\n            <mat-form-field style=\\\"margin-left: 30px\\\" *ngIf=\\\"produto?.grupoProduto?.exigeAno\\\" fxFlex\\r\\n                appearance=\\\"outline\\\">\\r\\n                <mat-label>Ano</mat-label>\\r\\n                <input [(ngModel)]=\\\"produto.ano\\\" [disabled]=\\\"isFranquiado\\\" name=\\\"ano\\\" matInput\\r\\n                    [textMask]=\\\"{mask: textMasks.getNumbersOnlyMask(4), guide: false}\\\"\\r\\n                    placeholder=\\\"Digite o ano do produto\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\" fxLayoutAlign=\\\" center\\\" *ngIf=\\\"isFranquiado\\\">\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\" >\\r\\n                <mat-label>Estoque</mat-label>\\r\\n                <input [value]=\\\"produto?.currentEstoque?.saldo || '-'\\\" matInput [disabled]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Preço de custo</mat-label>\\r\\n                <input [(ngModel)]=\\\"produto.currentEstoque.precoCusto\\\" name=\\\"precoCusto\\\" matInput required\\r\\n                    [textMask]=\\\"{mask: textMasks.getDecimalNumberMask(5, 4), guide: false}\\\"\\r\\n                    [disabled]=\\\"true\\\"\\r\\n                    placeholder=\\\"Digite o preço de custo do produto\\\" >\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Preço de venda</mat-label>\\r\\n                <input [(ngModel)]=\\\"produto.currentEstoque.precoVenda\\\" name=\\\"precoVenda\\\" matInput required\\r\\n                    [textMask]=\\\"{mask: textMasks.getDecimalNumberMask(5, 2), guide: false}\\\"\\r\\n                    placeholder=\\\"Digite o preço de venda do produto\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Código de barras</mat-label>\\r\\n                <input [disabled]=\\\"isFranquiado\\\" uppercase [(ngModel)]=\\\"produto.codigoBarras\\\" name=\\\"codigoBarras\\\" matInput\\r\\n                    [textMask]=\\\"{mask: textMasks.getNumbersOnlyMask(100), guide: false}\\\"\\r\\n                    placeholder=\\\"Digite o código de barras do produto\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Descrição</mat-label>\\r\\n                <textarea [disabled]=\\\"isFranquiado\\\" uppercase [(ngModel)]=\\\"produto.descricao\\\" name=\\\"descricao\\\" matInput maxlength=\\\"144\\\"\\r\\n                    placeholder=\\\"Digite a descrição do produto\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Fornecedor da ultima compra</mat-label>\\r\\n                <input value=\\\"{{produto?.currentEstoque?.fornecedor?.codigo}} - {{produto?.currentEstoque?.fornecedor?.razaoSocial}}\\\" matInput [disabled]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n           \\r\\n            <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n                <mat-label>Data da ultima compra</mat-label>\\r\\n                <input [value]=\\\"produto?.currentEstoque?.dataUltimaCompra | date:'dd/MM/yyyy hh:mm:ss'\\\" matInput [disabled]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"!isFranquiado\\\" fxFlex style=\\\"background-color: #b71c1c; color: white; font-weight: bold;border-radius: 30px;\\\"\\r\\n            fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <label *ngIf=\\\"!fotoImage && !produto.anexoUuid\\\" style=\\\"max-width: 400px;\\\"\\r\\n                class=\\\"text-truncate push-left-md\\\">\\r\\n                Selecione o arquivo...\\r\\n            </label>\\r\\n\\r\\n\\r\\n            <label *ngIf=\\\"produto?.nomeArquivo\\\" style=\\\"max-width: 400px;\\\" class=\\\"text-truncate push-left-md\\\">\\r\\n                {{produto?.nomeArquivo}}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"push-right-sm\\\">\\r\\n                <button (click)=\\\"fotoInput.click()\\\" *ngIf=\\\"!fotoImage && !produto?.anexoUuid\\\" mat-icon-button\\r\\n                    matTooltip=\\\"Adicionar anexo\\\">\\r\\n                    <mat-icon>attach_file</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button *ngIf=\\\"fotoImage || produto?.anexoUuid\\\" (click)=\\\"removeAnexo()\\\" matTooltip=\\\"Remover anexo\\\"\\r\\n                    mat-icon-button>\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button *ngIf=\\\"produto.anexoUuid\\\" matTooltip=\\\"Download anexo\\\" (click)=\\\"downloadFile()\\\" mat-icon-button>\\r\\n                    <mat-icon>file_download</mat-icon>\\r\\n                </button>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <input hidden type=\\\"file\\\" #fotoInput (change)=\\\"setProdutoAnexo($event)\\\">\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n        <label> <label style=\\\"font-weight: bold\\\">Data de criação:</label>\\r\\n            {{ produto.created ? (produto.created | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n        <label class=\\\"push-top-sm \\\"><label style=\\\"font-weight: bold\\\">Data de atualização :</label>\\r\\n            {{ produto.updated ? (produto.updated | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n    <button (click)=\\\"onSubmit(qualificadorForm)\\\" mat-raised-button class=\\\"white-btn\\\"\\r\\n        color=\\\"primary\\\">\\r\\n        SALVAR\\r\\n    </button>\\r\\n    <button mat-dialog-close mat-raised-button class=\\\"white-btn\\r\\n    push-left-md bgc-grey-800\\\">\\r\\n        CANCELAR\\r\\n    </button>\\r\\n    </div>\\r\\n</mat-dialog-actions>\"","module.exports = \"<mat-toolbar class=\\\"toolbar-default\\\">\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n\\t\\t<mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>CÓDIGO</mat-label>\\r\\n\\t\\t\\t<input matInput uppercase placeholder=\\\"Pesquisar por codigo\\\" [textMask]=\\\"{mask: masks.getNumbersOnlyMask(8), guide: false}\\\" [(ngModel)]=\\\"filters.codigo\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>Produto</mat-label>\\r\\n\\t\\t\\t<input uppercase matInput placeholder=\\\"Pesquisar por nome\\\" maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.nome\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div fxFlex></div>\\r\\n\\r\\n\\t\\t<button *ngIf=\\\"!isFranquiado\\\" color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"openForm()\\\" mat-raised-button>ADICIONAR\\r\\n\\t\\t\\tNOVO PRODUTO</button>\\r\\n\\t</mat-toolbar-row>\\r\\n\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\t\\t<button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"onListProdutos()\\\" mat-raised-button\\r\\n\\t\\t\\ttype=\\\"submit\\\">CONSULTAR</button>\\r\\n\\t\\t<button color=\\\"accent\\\" class=\\\"white-btn\\\" (click)=\\\"clearFilters()\\\" mat-raised-button>LIMPAR FILTROS</button>\\r\\n\\t</mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n\\r\\n\\t<td-data-table *ngIf=\\\"pageRequest?.content?.length > 0\\\" #dataTable [data]=\\\"pageRequest.content\\\"\\r\\n\\t\\t[columns]=\\\"tableColumns\\\" [clickable]=\\\"true\\\">\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"nome\\\" let-produto=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ produto?.produto}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"situacao\\\" let-produto=\\\"row\\\">\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"produto?.situacao\\\" class=\\\"tc-green-700\\\" matTooltip=\\\"Ativado\\\">check_circle</mat-icon>\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"!produto?.situacao\\\" matTooltip=\\\"Desativado\\\" class=\\\"tc-red-700\\\">block</mat-icon>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"opcoes\\\" let-produto=\\\"row\\\">\\r\\n\\r\\n\\t\\t\\t<button matTooltip=\\\"Editar produto\\\" (click)=\\\"$event.stopPropagation(); openForm(produto)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 edit-button-hover\\\">edit</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"!produto.situacao && !isFranquiado\\\" matTooltip=\\\"Ativar produto\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoProduto(produto)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 active-button-hover\\\">check_circle_outline</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"produto.situacao && !isFranquiado\\\"  matTooltip=\\\"Excluir/Desativar produto\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoProduto(produto)\\\" mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 delete-button-hover\\\">block</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t</td-data-table>\\r\\n\\r\\n\\t<td-paging-bar #pagingBar [pageSize]=\\\"pageRequest.pageable.size\\\" [total]=\\\"pageRequest.totalElements\\\"\\r\\n\\t\\t(change)=\\\"page($event)\\\" *ngIf=\\\"pageRequest.content != null && pageRequest.content.length\\\">\\r\\n\\t\\t<span td-paging-bar-label hide-xs>Registros por página:</span>\\r\\n\\t\\t<mat-select [style.width.px]=\\\"50\\\" [(ngModel)]=\\\"pageRequest.pageable.size\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let size of [10,50,100]\\\" [value]=\\\"size\\\">\\r\\n\\t\\t\\t\\t{{size}}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t{{pagingBar.range}} <span hide-xs>de {{pagingBar.total}}</span>\\r\\n\\t</td-paging-bar>\\r\\n\\r\\n\\t<div *ngIf=\\\"pageRequest?.content?.length == 0\\\" class=\\\"pad-md\\\" fxLayoutAlign=\\\"center \\\">\\r\\n\\t\\t<label>Nenhum registro encontrado.</label>\\r\\n\\t</div>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvZHV0by9wcm9kdXRvLWZvcm0vcHJvZHV0by1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ProdutoService, ArquivoService, GrupoProdutoService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { Produto, GrupoProduto, PerfilUsuario } from 'src/generated/entities';\r\nimport { TextMasks } from 'src/app/common/mask/text-masks';\r\nimport { AutenticacaoService } from 'src/app/common/autenticacao/autenticacao.service';\r\n\r\n@Component({\r\n  selector: 'app-produto-form',\r\n  templateUrl: './produto-form.component.html',\r\n  styleUrls: ['./produto-form.component.scss']\r\n})\r\nexport class ProdutoFormComponent implements OnInit\r\n{\r\n  /*-------------------------------------------------------------------\r\n    *                           ATTRIBUTES\r\n    *-------------------------------------------------------------------*/\r\n  public title = \"\";\r\n\r\n  public produto: Produto = { codigo: 0, currentEstoque: {} };\r\n\r\n  public fotoImage: any;\r\n\r\n  public gruposProdutos: GrupoProduto[];\r\n\r\n  public textMasks = TextMasks;\r\n\r\n  public isFranquiado = false;\r\n\r\n  constructor(\r\n    private autenticacaoService: AutenticacaoService,\r\n    private produtoService: ProdutoService,\r\n    private grupoProdutoService: GrupoProdutoService,\r\n    private openSnackBarService: OpenSnackBarService,\r\n    public dialogRef: MatDialogRef<ProdutoFormComponent>,\r\n    private arquivoService: ArquivoService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  )\r\n  {\r\n    if (data.produtoId != null)\r\n    {\r\n      this.onFindProdutoById(data.produtoId);\r\n    }\r\n\r\n    this.onListGrupoProdutos(\"\");\r\n  }\r\n\r\n  async ngOnInit()\r\n  {\r\n    if (this.data.produtoId)\r\n      this.title = \"Alterar produto\";\r\n    else\r\n      this.title = \"Inserir produto\";\r\n\r\n      this.autenticacaoService.usuarioAutenticado().then( result => {\r\n        this.isFranquiado = this.autenticacaoService.isFranquiado;\r\n      });\r\n  }\r\n\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n\r\n  private onFindProdutoById(produtoId: any)\r\n  {\r\n    this.produtoService.findProdutoById(produtoId).subscribe(produto =>\r\n    {\r\n      console.log(produto)\r\n      this.produto = produto;\r\n    }, err => this.openSnackBarService.openError(err.message))\r\n\r\n  }\r\n\r\n  public onSubmit(form): void\r\n  {\r\n\r\n    if(form.invalid){\r\n      this.openSnackBarService.openError(`Todos os campos com * devem ser preenchidos.`);\r\n      return;\r\n    }\r\n\r\n    let anexoOld = null;\r\n\r\n    if (!this.produto.grupoProduto || (this.produto.grupoProduto && !this.produto.grupoProduto.codigo))\r\n    {\r\n      this.openSnackBarService.openError(\"O campo grupo de produto deve ser selecionado.\");\r\n      return;\r\n    }\r\n\r\n    if (this.produto.anexo && typeof (this.produto.anexo) == 'string')\r\n    {\r\n      anexoOld = this.produto.anexo;\r\n      this.produto.anexo = null;\r\n    }\r\n\r\n    if (!this.produto.codigo)\r\n    {\r\n      this.produtoService.insertProduto(this.produto).subscribe(produto =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Produto salvo com sucesso.\");\r\n        this.dialogRef.close(this.produto);\r\n      }, err =>\r\n      {\r\n\r\n        if (anexoOld) this.produto.anexo = anexoOld;\r\n\r\n        this.openSnackBarService.openError(err.message)\r\n\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.produtoService.updateProduto(this.produto).subscribe(produto =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Produto atualizado com sucesso.\");\r\n        this.dialogRef.close(this.produto);\r\n      }, err =>\r\n      {\r\n        if (anexoOld) this.produto.anexo = anexoOld;\r\n        this.openSnackBarService.openError(err.message)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  public onListGrupoProdutos(filter)\r\n  {\r\n    this.grupoProdutoService.listGrupoProdutosByFilters(filter ? filter : \"\", isNaN(filter) || filter == null || filter == \"\" ? null : parseInt(filter.substring(0, 9)), null).subscribe(grupoProdutoPage =>\r\n    {\r\n      this.gruposProdutos = grupoProdutoPage.content.filter(c => c.situacao);\r\n    })\r\n  }\r\n\r\n  public displayFn(grupoProduto?: GrupoProduto): string | undefined\r\n  {\r\n    return grupoProduto ? grupoProduto.codigo + \" - \" + grupoProduto.grupoProduto : undefined;\r\n  }\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           FOTO\r\n  *-------------------------------------------------------------------*/\r\n\r\n\r\n\r\n  public removeAnexo()\r\n  {\r\n    this.produto.anexo = null;\r\n    this.produto.anexoUuid = null;\r\n    this.fotoImage = null;\r\n    this.produto.nomeArquivo = null;\r\n  }\r\n\r\n  public downloadFile()\r\n  {\r\n    this.arquivoService.downloadArquivoByUuid(this.produto.anexoUuid).subscribe(result =>\r\n    {\r\n      window.location.href = result;\r\n    }, (exception) => this.openSnackBarService.openError(exception.message))\r\n  }\r\n\r\n  public setProdutoAnexo(event)\r\n  {\r\n    if (event.target.files[0])\r\n    {\r\n      if (event.target.files[0].size <= 10000000) //10MB\r\n      {\r\n        this.produto.anexo = event.target;\r\n\r\n        this.produto.nomeArquivo = event.target.files[0].name;\r\n\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = (event: any) =>\r\n        {\r\n          this.fotoImage = event.target.result;\r\n        };\r\n        this.produto.anexoUuid = null;\r\n        reader.readAsDataURL(event.target.files[0]);\r\n      }\r\n      else\r\n      {\r\n        this.openSnackBarService.openSuccess(\"O tamanho da foto não pode ser maior que 10MB\");\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.produto.anexo = null;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvZHV0by9wcm9kdXRvLWxpc3QvcHJvZHV0by1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProdutoFormComponent } from '../produto-form/produto-form.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TdDialogService, ITdDataTableColumn, IPageChangeEvent } from '@covalent/core';\r\nimport { PaginationService } from 'src/app/common/pagination/pagination.service';\r\nimport { ProdutoService, FranquiaService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { Franquia, Produto } from 'src/generated/entities';\r\nimport { TextMasks } from 'src/app/common/mask/text-masks';\r\nimport { AutenticacaoService } from 'src/app/common/autenticacao/autenticacao.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-produto-list',\r\n    templateUrl: './produto-list.component.html',\r\n    styleUrls: ['./produto-list.component.scss']\r\n})\r\nexport class ProdutoListComponent implements OnInit\r\n{\r\n\r\n    /*-------------------------------------------------------------------\r\n      *                           ATTRIBUTES\r\n      *-------------------------------------------------------------------*/\r\n\r\n    public pageRequest: any = [];\r\n\r\n    public filters = {\r\n        nome: '',\r\n        codigo: null\r\n    }\r\n\r\n\r\n    /**\r\n       * Colunas da Grid\r\n       */\r\n    public tableColumns: ITdDataTableColumn[] = [\r\n        { name: 'codigo', label: 'CÓDIGO', sortable: false },\r\n        { name: 'nome', label: 'PRODUTO', sortable: false },\r\n        { name: 'situacao', label: 'SITUAÇÃO', sortable: false },\r\n        { name: 'opcoes', label: 'OPÇÕES', tooltip: 'OPÇÕES', sortable: false, width: 150 }\r\n    ];\r\n\r\n    public masks = TextMasks;\r\n\r\n    public isFranquiado = false;\r\n\r\n    /**\r\n     * \r\n     * @param dialog \r\n     * @param _dialogService \r\n     * @param paginationService \r\n     * @param openSnackBarService \r\n     * @param produtoService \r\n     */\r\n    constructor(\r\n        private autenticacaoService: AutenticacaoService,\r\n        public dialog: MatDialog,\r\n        private _dialogService: TdDialogService,\r\n        private paginationService: PaginationService,\r\n        private openSnackBarService: OpenSnackBarService,\r\n        private produtoService: ProdutoService,\r\n        private franquiaService: FranquiaService) \r\n    {\r\n        this.pageRequest = paginationService.pageRequest('nome', 'ASC', 10);\r\n    }\r\n\r\n\r\n    async ngOnInit()\r\n    {\r\n        this.onListProdutos();\r\n        this.autenticacaoService.usuarioAutenticado().then( result => {\r\n            this.isFranquiado = this.autenticacaoService.isFranquiado;\r\n        });\r\n    }\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           BEHAVIORS\r\n    *-------------------------------------------------------------------*/\r\n\r\n    public openForm(produto)\r\n    {\r\n        const dialogRef = this.dialog.open(ProdutoFormComponent, {\r\n            width: '800px',\r\n            height: 'auto',\r\n            data: { produtoId: produto ? produto.codigo : null }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(produtoSaved =>\r\n        {\r\n            if (produtoSaved) this.onListProdutos();\r\n        });\r\n    }\r\n\r\n\r\n    public atualizarSituacaoProduto(produto: Produto)\r\n    {\r\n        if (produto.situacao)\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja excluir este produto ?\",\r\n                title: \"Excluir produto\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.produtoService.deleteProduto(produto.codigo).subscribe(result =>\r\n                    {\r\n                        this.openSnackBarService.openSuccess('Produto excluído com sucesso.');\r\n                        this.onListProdutos();\r\n                    }, err =>\r\n                    {\r\n\r\n\r\n                        this._dialogService.openConfirm({\r\n                            message: \"Não foi possível excluir este produto pois o mesmo está relacionado a outro registro. Deseja desativar ?\",\r\n                            title: \"Desativar produto\",\r\n                            cancelButton: 'CANCELAR',\r\n                            acceptButton: 'CONFIRMAR',\r\n                            width: '500px'\r\n                        }).afterClosed().subscribe((accept: boolean) =>\r\n                        {\r\n                            if (accept)\r\n                            {\r\n                                this.produtoService.updateSituacaoProduto(produto.codigo, !produto.situacao).subscribe(result =>\r\n                                {\r\n                                    this.openSnackBarService.openSuccess('Produto desativado com sucesso.');\r\n                                    this.onListProdutos();\r\n                                }, err => this.openSnackBarService.openError(err.message))\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja ativar esta produto ?\",\r\n                title: \"Ativar produto\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.produtoService.updateSituacaoProduto(produto.codigo, !produto.situacao).subscribe(result =>\r\n                    {\r\n                        this.openSnackBarService.openSuccess('Produto ativado com sucesso.');\r\n                        this.onListProdutos();\r\n                    }, err => this.openSnackBarService.openError(err.message))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           Listagem e filtros\r\n    *-------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Método responsável pela listagem dos avisos utilizando os filtros informados pelo produto\r\n     */\r\n    public onListProdutos(filters: Boolean = true): void\r\n    {\r\n        if (filters)\r\n        {\r\n            this.pageRequest.pageable.page = 0;\r\n        }\r\n\r\n        this.produtoService.listProdutosByFilters(\r\n            this.filters.nome,\r\n            this.filters.codigo,\r\n            this.pageRequest.pageable\r\n        ).subscribe((result) =>\r\n        {\r\n            this.pageRequest = this.paginationService.fixPageRequest(result, this.pageRequest);\r\n        }), (error) => { this.openSnackBarService.openError(error.message) }\r\n    }\r\n\r\n\r\n\r\n\r\n    public clearFilters()\r\n    {\r\n        this.filters = {\r\n            nome: '',\r\n            codigo: null\r\n        }\r\n\r\n        this.onListProdutos();\r\n    }\r\n\r\n\r\n\r\n    public page(pagingEvent: IPageChangeEvent)\r\n    {\r\n        this.pageRequest.pageable.page = pagingEvent.page - 1;\r\n        this.pageRequest.pageable.size = pagingEvent.pageSize;\r\n\r\n        this.onListProdutos();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ProdutoListComponent } from './produto-list/produto-list.component';\r\nimport { ProdutoRouting } from './produto.routing';\r\nimport { ProdutoFormComponent } from './produto-form/produto-form.component';\r\nimport { SharedCommonModule } from 'src/app/common/shared-common.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProdutoListComponent,\r\n    ProdutoFormComponent,\r\n  ],\r\n  imports: [\r\n    ProdutoRouting,\r\n    SharedCommonModule\r\n  ],\r\n  exports: [\r\n    ProdutoListComponent,\r\n    ProdutoFormComponent,\r\n    ProdutoRouting\r\n  ],\r\n  entryComponents: [\r\n    ProdutoFormComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class ProdutoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ProdutoListComponent } from './produto-list/produto-list.component';\r\nimport { AuthGuard } from 'src/app/common/autenticacao/auth-guard.service';\r\n\r\nconst produtoRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: ProdutoListComponent,\r\n                data: {\r\n                    title: 'Produtos',\r\n                    ambos: true\r\n                },\r\n                canActivate: [AuthGuard]\r\n            }\r\n        ],        \r\n        \r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(produtoRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProdutoRouting { }\r\n"],"sourceRoot":""}