{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/common/auto-complete-with-redirect/auto-complete-with-redirect.component.html","webpack:///./src/app/common/detail-field/detail-field.component.html","webpack:///./src/app/common/header/header.component.html","webpack:///./src/app/modules/usuario/usuario-form/usuario-form.component.html","webpack:///./src/app/modules/usuario/usuario-list/usuario-list.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/autenticacao/autenticacao.service.ts","webpack:///./src/app/common/autenticacao/auth-guard.service.ts","webpack:///./src/app/common/auto-complete-with-redirect/auto-complete-with-redirect.component.scss","webpack:///./src/app/common/auto-complete-with-redirect/auto-complete-with-redirect.component.ts","webpack:///./src/app/common/detail-field/detail-field.component.scss","webpack:///./src/app/common/detail-field/detail-field.component.ts","webpack:///./src/app/common/header/header.component.scss","webpack:///./src/app/common/header/header.component.ts","webpack:///./src/app/common/open-snackbar/open-snackbar.service.ts","webpack:///./src/app/common/pagination/pagination.service.ts","webpack:///./src/app/common/shared-common.module.ts","webpack:///./src/app/common/uppercase/uppercase.directive.ts","webpack:///./src/app/modules/usuario/usuario-form/usuario-form.component.scss","webpack:///./src/app/modules/usuario/usuario-form/usuario-form.component.ts","webpack:///./src/app/modules/usuario/usuario-list/usuario-list.component.scss","webpack:///./src/app/modules/usuario/usuario-list/usuario-list.component.ts","webpack:///./src/app/modules/usuario/usuario.module.ts","webpack:///./src/app/modules/usuario/usuario.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/generated/generated.module.ts","webpack:///./src/generated/services-wrapper.ts","webpack:///./src/generated/services.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<header>\\r\\n  <router-outlet></router-outlet>\\r\\n</header>\\r\\n  \"","module.exports = \"<div fxLayoutAlign=\\\" center\\\">\\r\\n\\r\\n    <mat-form-field fxFlex appearance=\\\"outline\\\" class=\\\"{{classes}}\\\">\\r\\n        <mat-label class=\\\"{{classes}}1\\\">{{title}}</mat-label>\\r\\n        <input uppercase [required]=\\\"!isNotRequired\\\" #inputFilter type=\\\"text\\\" matInput  [matAutocomplete]=\\\"auto\\\"\\r\\n            [disabled]=\\\"(itemSelected.selected && itemSelected.selected[key]) || isDetail\\\"\\r\\n            [value]=\\\"displayFn(itemSelected.selected)\\\" name=\\\"seleted\\\" (keyup)=\\\"filterChange(inputFilter.value);\\\"\\r\\n            (blur)=\\\"addRequired()\\\">\\r\\n\\r\\n        <button *ngIf=\\\"itemSelected.selected && itemSelected.selected[key] && !isDetail\\\"\\r\\n            (click)=\\\"onDeleteEntity($event)\\\" matTooltip=\\\"Remover {{title}}\\\" matSuffix mat-icon-button\\r\\n            class=\\\"tc-grey-700 delete-button-hover\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <button (click)=\\\"redirect()\\\" mat-mini-fab color=\\\"primary\\\" style=\\\"margin: 0 0 22px 13px;\\\"\\r\\n        matTooltip=\\\"Ir para {{title}}\\\">\\r\\n        <mat-icon>\\r\\n            launch\\r\\n        </mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onSelectEntity($event.option.value)\\\">\\r\\n        <mat-option [value]=\\\"null\\\">Nenhum</mat-option>\\r\\n        <mat-option *ngFor=\\\"let value of list.values\\\" [value]=\\\"value\\\">{{displayFn(value)}}\\r\\n        </mat-option>\\r\\n    </mat-autocomplete>\\r\\n</div>\"","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n  <label class=\\\"md-body-1 lbl\\\">{{ label }}</label>\\r\\n  <span class=\\\"md-body-2 push-top-xs {{valueCSSClass}}\\\">{{ value }}</span>\\r\\n</div>\"","module.exports = \"<mat-sidenav-container class=\\\"header-container\\\" autosize>\\r\\n\\r\\n    <mat-sidenav #sidenav mode=\\\"over\\\">\\r\\n\\r\\n        <div style=\\\"background-color: #b71c1c;padding-bottom: 10px;\\\"class=\\\"pad-left-md push-bottom-md\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <h3 style=\\\"color: white\\\">MENU</h3>\\r\\n\\r\\n            <img src=\\\"../../../assets/logo.png\\\" style=\\\"width: 100px; margin-top: 10px; margin-right: 10px\\\">\\r\\n        </div>\\r\\n        <p *ngFor=\\\"let menu of menus; last as last\\\">\\r\\n            <button *ngIf=\\\"(menu.onlyFranquiador && !isFranquiado) || (!menu.onlyFranquiador && isFranquiado) || (menu.ambos)\\\" (click)=\\\"sidenav.toggle()\\\" routerLink=\\\"{{menu.router}}\\\" fxLayoutAlign=\\\"start center\\\" style=\\\"width: 100%; margin-bottom: 10px;\\\" mat-button>\\r\\n                <mat-icon style=\\\"font-size: 20px !important;\\\">{{menu.icon}}</mat-icon>\\r\\n                <label class=\\\"push-left-md\\\" style=\\\"font-size: 20px !important;\\\">{{menu.title}}</label>\\r\\n            </button>\\r\\n\\r\\n            <mat-divider *ngIf=\\\"!last && (menu.onlyFranquiador && !isFranquiado) || (!menu.onlyFranquiador && isFranquiado) || (menu.ambos)\\\" ></mat-divider>\\r\\n        </p>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <td-layout-nav class=\\\"header-toolbar\\\">\\r\\n        <div td-toolbar-content fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n            fxFlex>\\r\\n            <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                <mat-icon>menu</mat-icon>\\r\\n            </button>\\r\\n            <h2 *ngIf=\\\"title\\\" style=\\\"font-size: 20px !important;font-weight: bold;; color: white; margin-left: 10px !important;\\\" >{{title | uppercase}}</h2>\\r\\n            <h2 *ngIf=\\\"!title\\\" style=\\\"font-size: 20px !important;font-weight: bold;; color: white; margin-left: 10px !important;\\\" >{{'produto' | uppercase}}</h2>\\r\\n\\r\\n            <div fxFlex></div>\\r\\n\\r\\n\\r\\n            <button mat-icon-button style=\\\"color: white; cursor: default !important;\\\" >\\r\\n                <mat-icon>account_circle</mat-icon>\\r\\n            </button>\\r\\n            <h2 *ngIf=\\\"title\\\" style=\\\"font-size: 20px !important;font-weight: bold;; color: white\\\" >{{usuarioAutenticado?.usuario | uppercase}} ({{usuarioAutenticado?.perfilUsuario | uppercase}})</h2>\\r\\n\\r\\n            <button mat-button class=\\\"push-left-md push-right-md\\\" [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                    <mat-icon>exit_to_app</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                <button (click)=\\\"logout()\\\" class=\\\"pad-left-lg\\\" mat-menu-item>\\r\\n                    <span class=\\\"tc-grey-800 mat-body-1\\\">Sair</span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n        <router-outlet></router-outlet>\\r\\n    </td-layout-nav>\\r\\n</mat-sidenav-container>\"","module.exports = \"<h2 mat-dialog-title>{{title}}</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n\\r\\n  <form #qualificadorForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Código</mat-label>\\r\\n        <input uppercase matInput [(ngModel)]=\\\"usuario.codigo\\\" [disabled]=\\\"true\\\" name=\\\"codigo\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\" class=\\\"push-left-md\\\">\\r\\n        <mat-label>Perfil do usuário</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"usuario.perfilUsuario\\\" name=\\\"perfilUsuario\\\" (ngModelChange)=\\\"changeTipo()\\\">\\r\\n          <mat-option [value]=\\\"'FRANQUEADOR'\\\">Franqueador</mat-option>\\r\\n          <mat-option [value]=\\\"'FRANQUEADO'\\\">Franqueado</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"usuario.perfilUsuario == 'FRANQUEADO'\\\">\\r\\n      <auto-complete-with-redirect fxFlex title=\\\"Franquia\\\" key=\\\"codigo\\\" link=\\\"franquia\\\" displayKey=\\\"franquia\\\"\\r\\n        [displayId]=\\\"true\\\" [list]=\\\"{values: franquias}\\\" [itemSelected]=\\\"{selected: usuario.franquia}\\\"\\r\\n        [classes]=\\\"required-class-franquia\\\"\\r\\n        (onFilterChange)=\\\"onListFranquias($event)\\\" \\r\\n        (onSelect)=\\\"usuario.franquia = $event\\\"\\r\\n        (onDelete)=\\\"usuario.franquia = {}\\\">\\r\\n      </auto-complete-with-redirect>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Usuário</mat-label>\\r\\n        <input uppercase required [(ngModel)]=\\\"usuario.usuario\\\" name=\\\"nome\\\" matInput maxlength=\\\"144\\\"\\r\\n          placeholder=\\\"Digite o nome do usuário\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>CPF</mat-label>\\r\\n        <input uppercase required [textMask]=\\\"{mask: maskCpf, guide: false}\\\" [(ngModel)]=\\\"usuario.cpf\\\" name=\\\"cpf\\\"\\r\\n          matInput maxlength=\\\"144\\\" placeholder=\\\"Digite seu cpf\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Telefone</mat-label>\\r\\n        <input uppercase required maxlength=\\\"50\\\" [textMask]=\\\"{mask: maskTelefone, guide:false}\\\" matInput name=\\\"telefone\\\"\\r\\n          [(ngModel)]=\\\"usuario.telefone\\\" placeholder=\\\"Digite seu telefone\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>E-mail</mat-label>\\r\\n        <input uppercase required [(ngModel)]=\\\"usuario.email\\\" email=\\\"true\\\" name=\\\"email\\\" type=\\\"email\\\" matInput\\r\\n          maxlength=\\\"144\\\" placeholder=\\\"Digite seu e-mail\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Senha</mat-label>\\r\\n        <input uppercase matInput type=\\\"password\\\" [(ngModel)]=\\\"usuario.senha\\\" maxlength=\\\"144\\\" name=\\\"senha\\\"\\r\\n          [required]=\\\"!usuario.codigo\\\" placeholder=\\\"Digite sua senha\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field fxFlex appearance=\\\"outline\\\">\\r\\n        <mat-label>Confirmação da senha</mat-label>\\r\\n        <input uppercase matInput type=\\\"password\\\" maxlength=\\\"144\\\" [(ngModel)]=\\\"confSenha\\\" name=\\\"confSenha\\\"\\r\\n          placeholder=\\\"Digite sua confirmação da senha\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\r\\n  <div fxLayout=\\\"column\\\">\\r\\n    <label> <label style=\\\"font-weight: bold\\\">Data de criação:</label>\\r\\n      {{ usuario.created ? (usuario.created | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n    <label class=\\\"push-top-sm \\\"><label style=\\\"font-weight: bold\\\">Data de atualização :</label>\\r\\n      {{ usuario.updated ? (usuario.updated | date:'dd/MM/yyyy hh:mm:ss') : '-'}} </label>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <button (click)=\\\"onSubmit(qualificadorForm)\\\" mat-raised-button class=\\\"white-btn\\\"\\r\\n      color=\\\"primary\\\">\\r\\n      SALVAR\\r\\n    </button>\\r\\n    <button mat-dialog-close mat-raised-button class=\\\"white-btn\\r\\n    push-left-md bgc-grey-800\\\">\\r\\n      CANCELAR\\r\\n    </button>\\r\\n  </div>\\r\\n</mat-dialog-actions>\"","module.exports = \"<mat-toolbar class=\\\"toolbar-default\\\">\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\t\\t<mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>Usuário</mat-label>\\r\\n\\t\\t\\t<input uppercase matInput placeholder=\\\"Pesquisar por nome\\\" maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.nome\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\r\\n\\t\\t<mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>Situação</mat-label>\\r\\n\\t\\t\\t<mat-select placeholder=\\\"Pesquisar por situação\\\" [(ngModel)]=\\\"filters.situacao\\\">\\r\\n\\t\\t\\t\\t<mat-option [value]=\\\"null\\\">\\r\\n\\t\\t\\t\\t\\tNenhum\\r\\n\\t\\t\\t\\t</mat-option>\\r\\n\\t\\t\\t\\t<mat-option [value]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\tAtivo\\r\\n\\t\\t\\t\\t</mat-option>\\r\\n\\t\\t\\t\\t<mat-option [value]=\\\"false\\\">\\r\\n\\t\\t\\t\\t\\tDesativo\\r\\n\\t\\t\\t\\t</mat-option>\\r\\n\\t\\t\\t</mat-select>\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\r\\n\\t\\t<mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\r\\n\\t\\t\\t<mat-label>E-mail</mat-label>\\r\\n\\t\\t\\t<input uppercase matInput placeholder=\\\"Pesquisar por E-mail\\\" maxlength=\\\"144\\\" [(ngModel)]=\\\"filters.email\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div fxFlex></div>\\r\\n\\r\\n\\t\\t<button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"openForm()\\\" mat-raised-button>ADICIONAR\\r\\n\\t\\t\\tNOVO USUÁRIO</button>\\r\\n\\t</mat-toolbar-row>\\r\\n\\r\\n\\t<mat-toolbar-row fxLayoutGap=\\\"30px\\\">\\r\\n\\t\\t<button color=\\\"primary\\\" class=\\\"white-btn\\\" (click)=\\\"onListUsuarios()\\\" mat-raised-button\\r\\n\\t\\t\\ttype=\\\"submit\\\">CONSULTAR</button>\\r\\n\\t\\t<button color=\\\"accent\\\" class=\\\"white-btn\\\" (click)=\\\"clearFilters()\\\" mat-raised-button>LIMPAR FILTROS</button>\\r\\n\\t</mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n\\r\\n\\t<td-data-table *ngIf=\\\"pageRequest?.content?.length > 0\\\" #dataTable [data]=\\\"pageRequest.content\\\"\\r\\n\\t\\t[columns]=\\\"tableColumns\\\" [clickable]=\\\"true\\\" >\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"nome\\\" let-usuario=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ usuario?.usuario}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template tdDataTableTemplate=\\\"email\\\" let-usuario=\\\"row\\\">\\r\\n\\t\\t\\t<span class=\\\"text-truncate\\\">\\r\\n\\t\\t\\t\\t{{ usuario?.email}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"situacao\\\" let-usuario=\\\"row\\\">\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"usuario?.situacao\\\" class=\\\"tc-green-700\\\" matTooltip=\\\"Ativado\\\">check_circle</mat-icon>\\r\\n\\t\\t\\t<mat-icon *ngIf=\\\"!usuario?.situacao\\\" matTooltip=\\\"Desativado\\\" class=\\\"tc-red-700\\\">block</mat-icon>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<ng-template fxLayoutAlign=\\\"end\\\" tdDataTableTemplate=\\\"opcoes\\\" let-usuario=\\\"row\\\">\\r\\n\\r\\n\\t\\t\\t<button matTooltip=\\\"Editar usuário\\\" stopPropagation (click)=\\\"$event.stopPropagation(); openForm(usuario)\\\"\\r\\n\\t\\t\\t\\tmat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 edit-button-hover\\\">edit</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"!usuario.situacao\\\" matTooltip=\\\"Ativar usuário\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoUsuario(usuario)\\\" stopPropagation mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 active-button-hover\\\">check_circle_outline</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<button *ngIf=\\\"usuario.situacao\\\" matTooltip=\\\"Excluir/Desativar usuário\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); atualizarSituacaoUsuario(usuario)\\\" stopPropagation mat-icon-button>\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"tc-grey-700 delete-button-hover\\\">block</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t</td-data-table>\\r\\n\\r\\n\\t<td-paging-bar #pagingBar [pageSize]=\\\"pageRequest.pageable.size\\\" [total]=\\\"pageRequest.totalElements\\\"\\r\\n\\t\\t(change)=\\\"page($event)\\\" *ngIf=\\\"pageRequest.content != null && pageRequest.content.length\\\">\\r\\n\\t\\t<span td-paging-bar-label hide-xs>Registros por página:</span>\\r\\n\\t\\t<mat-select [style.width.px]=\\\"50\\\" [(ngModel)]=\\\"pageRequest.pageable.size\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let size of [5,50,100]\\\" [value]=\\\"size\\\">\\r\\n\\t\\t\\t\\t{{size}}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t{{pagingBar.range}} <span hide-xs>de {{pagingBar.total}}</span>\\r\\n\\t</td-paging-bar>\\r\\n\\r\\n\\t<div *ngIf=\\\"pageRequest?.content?.length == 0\\\" class=\\\"pad-md\\\" fxLayoutAlign=\\\"center \\\">\\r\\n\\t\\t<label>Nenhum registro encontrado.</label>\\r\\n\\t</div>\\r\\n</mat-card>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './common/autenticacao/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('../app/modules/produto/produto.module').then(m => m.ProdutoModule)\r\n  },\r\n  {\r\n    path: 'compra',\r\n    loadChildren: () => import('../app/modules/compra/compra.module').then(m => m.CompraModule)\r\n  },\r\n  {\r\n    path: 'usuario',\r\n    loadChildren: () => import('../app/modules/usuario/usuario.module').then(m => m.UsuarioModule)\r\n  },\r\n  {\r\n    path: 'franquia',\r\n    loadChildren: () => import('../app/modules/franquia/franquia.module').then(m => m.FranquiaModule)\r\n  },\r\n  {\r\n    path: 'grupo-produto',\r\n    loadChildren: () => import('../app/modules/grupo-produto/grupo-produto.module').then(m => m.GrupoProdutoModule)\r\n  },\r\n  {\r\n    path: 'mesa',\r\n    loadChildren: () => import('../app/modules/mesa/mesa.module').then(m => m.MesaModule)\r\n  },\r\n  {\r\n    path: 'produto',\r\n    loadChildren: () => import('../app/modules/produto/produto.module').then(m => m.ProdutoModule)\r\n  },\r\n  {\r\n    path: 'ambiente',\r\n    loadChildren: () => import('../app/modules/ambiente/ambiente.module').then(m => m.AmbienteModule),\r\n  },\r\n  {\r\n    path: 'cliente',\r\n    loadChildren: () => import('../app/modules/cliente/cliente.module').then(m => m.ClienteModule)\r\n  },\r\n  {\r\n    path: 'fornecedor',\r\n    loadChildren: () => import('../app/modules/fornecedor/fornecedor.module').then(m => m.FornecedorModule)\r\n  },\r\n  {\r\n    path: 'cidade',\r\n    loadChildren: () => import('../app/modules/cidade/cidade.module').then(m => m.CidadeModule)\r\n  },\r\n  {\r\n    path: 'estado',\r\n    loadChildren: () => import('../app/modules/estado/estado.module').then(m => m.EstadoModule)\r\n  },\r\n  {\r\n    path: 'pais',\r\n    loadChildren: () => import('../app/modules/pais/pais.module').then(m => m.PaisModule)\r\n  },\r\n  {\r\n    path: 'condicao-pagamento',\r\n    loadChildren: () => import('../app/modules/condicao-pagamento/condicao-pagamento.module').then(m => m.CondicaoPagamentoModule)\r\n  },\r\n  {\r\n    path: 'forma-pagamento',\r\n    loadChildren: () => import('../app/modules/forma-pagamento/forma-pagamento.module').then(m => m.FormaPagamentoModule)\r\n  },\r\n  {\r\n    path: 'contas-a-pagar',\r\n    loadChildren: () => import('../app/modules/contas-a-pagar/contas-a-pagar.module').then(m => m.ContasAPagarModule)\r\n  },\r\n  {\r\n    path: 'contas-a-receber',\r\n    loadChildren: () => import('../app/modules/contas-a-receber/contas-a-receber.module').then(m => m.ContasAReceberModule)\r\n  },\r\n  {\r\n    path: 'venda',\r\n    loadChildren: () => import('../app/modules/venda/venda.module').then(m => m.VendaModule)\r\n  }\r\n];\r\n\r\n\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes, { useHash: true });\r\n\r\n\r\n@NgModule({\r\n  imports: [routing],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const appRoutingProviders: any[] = [];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { UsuarioService } from './../generated/services';\r\nimport { Component } from '@angular/core';\r\nimport { Usuario } from 'src/generated/entities';\r\nimport { AutenticacaoService } from './common/autenticacao/autenticacao.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent\r\n{\r\n  title = 'projeto';\r\n\r\n  constructor(\r\n    private autenticacaoService: AutenticacaoService\r\n  )\r\n  {\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.autenticacaoService.usuarioAutenticado();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule, appRoutingProviders } from './app-routing.module';\r\nimport { SharedCommonModule } from './common/shared-common.module';\r\nimport { UsuarioModule } from './modules/usuario/usuario.module';\r\nimport { FranquiaModule } from './modules/franquia/franquia.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    SharedCommonModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    \r\n    UsuarioModule\r\n  ],\r\n  providers: [   \r\n    appRoutingProviders\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Usuario } from 'src/generated/entities';\r\nimport { UsuarioService } from 'src/generated/services';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AutenticacaoService\r\n{\r\n    private _usuario: Usuario;\r\n\r\n    private usuarioPromisse\r\n\r\n\r\n    constructor(private usuarioService: UsuarioService) \r\n    {\r\n        this.usuarioAutenticado().then(result =>{\r\n            this._usuario = result;\r\n        });\r\n    }\r\n\r\n    public usuarioAutenticado(): Promise<Usuario>\r\n    {\r\n        if (!this.usuarioPromisse)\r\n            this.usuarioPromisse = this.usuarioService.getAuthenticatedUser().toPromise();\r\n\r\n        return this.usuarioPromisse;\r\n    }\r\n\r\n\r\n    get isFranquiado(): boolean\r\n    {\r\n        if (!this._usuario)\r\n            this.usuarioAutenticado().then((usuario) =>\r\n            {\r\n                return usuario.perfilUsuario == 'FRANQUEADO'\r\n            })\r\n        else\r\n        {\r\n            return this._usuario.perfilUsuario == 'FRANQUEADO'\r\n        }\r\n    }\r\n\r\n    get usuario(): Usuario\r\n    {\r\n        if (!this._usuario)\r\n            this.usuarioAutenticado().then((usuario) =>\r\n            {\r\n                return usuario;\r\n            })\r\n        else\r\n        {\r\n            return this._usuario;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { AutenticacaoService } from './autenticacao.service';\r\nimport { UsuarioService } from 'src/generated/services';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Usuario } from 'src/generated/entities';\r\nimport { OpenSnackBarService } from '../open-snackbar/open-snackbar.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate\r\n{\r\n\r\n\r\n  constructor(private open: OpenSnackBarService,  private autenticacaoService: AutenticacaoService, private usuarioService: UsuarioService, private _router: Router) \r\n  {\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean\r\n  {\r\n\r\n    if (this.autenticacaoService.usuario)\r\n    {\r\n      if (next.data.onlyFranquiador && !this.autenticacaoService.isFranquiado || !next.data.onlyFranquiador && this.autenticacaoService.isFranquiado || next.data.ambos)\r\n      {\r\n        return true;\r\n      }\r\n\r\n      this.open.openError(\"Acesso negado, consulte o administrador.\");\r\n      this._router.navigate(['/produto']);\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      return this.usuarioService.getAuthenticatedUser().pipe(\r\n\r\n        map((usuario: Usuario) =>\r\n        {\r\n          if (( next.data.onlyFranquiador && !(usuario.perfilUsuario == 'FRANQUEADO') || \r\n               !next.data.onlyFranquiador && usuario.perfilUsuario == 'FRANQUEADO') || \r\n               next.data.ambos)\r\n          {\r\n            return true;\r\n          }\r\n    \r\n          this.open.openError(\"Acesso negado, consulte o administrador.\");\r\n          this._router.navigate(['/produto']);\r\n          return false;\r\n        }),\r\n        catchError((err) =>\r\n        {\r\n          return of(false);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9hdXRvLWNvbXBsZXRlLXdpdGgtcmVkaXJlY3QvYXV0by1jb21wbGV0ZS13aXRoLXJlZGlyZWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\ninterface listForRender<T>\r\n{\r\n    values: T[];\r\n}\r\n\r\ninterface selectedForRender<T>\r\n{\r\n    selected: T;\r\n}\r\n\r\n@Component({\r\n    selector: 'auto-complete-with-redirect',\r\n    templateUrl: './auto-complete-with-redirect.component.html',\r\n    styleUrls: ['./auto-complete-with-redirect.component.scss']\r\n})\r\nexport class AutoCompleteWithRedirectComponent<T> implements OnInit\r\n{\r\n    /*-------------------------------------------------------------------\r\n    *                           ATTRIBUTES\r\n    *-------------------------------------------------------------------*/\r\n\r\n    @Input()\r\n    public title: string;\r\n\r\n    @Input()\r\n    public isDisable: boolean = false;\r\n\r\n    @Input()\r\n    public displayKey: string;\r\n\r\n    @Input()\r\n    public key: string = \"codigo\";\r\n\r\n    @Input()\r\n    public link: string = \"usuario\";\r\n\r\n    @Input()\r\n    public isDetail: boolean = false;\r\n\r\n    @Input()\r\n    public displayId: boolean = false;\r\n\r\n    @Output()\r\n    public onFilterChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onDelete: EventEmitter<T> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onSelect: EventEmitter<T> = new EventEmitter();\r\n\r\n    @Input()\r\n    public itemSelected: selectedForRender<T> = { selected: {} as T };\r\n\r\n    @Input()\r\n    public list: listForRender<T> = { values: [] };\r\n\r\n    @Input()\r\n    public isNotRequired = false;\r\n\r\n    @Input()\r\n    public classes = \"\";\r\n    /*-------------------------------------------------------------------\r\n    *                           BEHAVIORs\r\n    *-------------------------------------------------------------------*/\r\n    /**\r\n     *\r\n     */\r\n    constructor() { }\r\n\r\n    /**\r\n     *\r\n     */\r\n    ngOnInit()\r\n    {\r\n    }\r\n\r\n    // \r\n\r\n    public displayFn(entity?: T)\r\n    {\r\n        if(this.displayId)\r\n        {\r\n            return entity && entity[this.key] ? entity[this.key] + \" - \" + entity[this.displayKey] : '';\r\n        }\r\n        else\r\n        {\r\n            return entity && entity[this.key] ? entity[this.displayKey] : '';\r\n        }\r\n    }\r\n\r\n    public addRequired(){\r\n        var elementInput = document.getElementsByClassName(this.classes)[0];\r\n        var elementLabel = document.getElementsByClassName(this.classes+\"1\")[0] as any;\r\n        var classes = [\"ng-pristine\", \"ng-invalid\", \"mat-form-field-invalid\", \"mat-form-field-hide-placeholder\", \"ng-touched\"]\r\n        if((!this.itemSelected.selected) || (this.itemSelected.selected && !this.itemSelected.selected[this.key]) ){\r\n            classes.forEach( c => {if(elementInput) elementInput.classList.add(c)})\r\n            if(!this.isNotRequired && elementInput)\r\n                elementLabel.style.color = \"#e53935\";\r\n        }\r\n        else{\r\n            classes.forEach( c => {if(elementInput) elementInput.classList.remove(c)})\r\n            if(!this.isNotRequired && elementInput)\r\n                elementLabel.style.color = \"rgba(0, 0, 0, 0.6)\";\r\n        }\r\n    }\r\n\r\n\r\n    public filterChange(filter: string)\r\n    {\r\n        this.onFilterChange.emit(filter);\r\n    }\r\n\r\n    public onSelectEntity(entity?: T)\r\n    {\r\n        this.itemSelected.selected = entity;\r\n        this.onSelect.emit(entity);\r\n        this.addRequired();\r\n    }\r\n\r\n    public onDeleteEntity(event)\r\n    {\r\n        this.itemSelected.selected = null;\r\n        this.onDelete.emit();\r\n        this.filterChange('');\r\n        this.addRequired();\r\n    }\r\n\r\n    public redirect()\r\n    {\r\n        var win = window.open(`http://localhost:4200/#/${this.link}`, '_blank');\r\n        win.focus();\r\n    }\r\n}\r\n","module.exports = \".lbl {\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2RldGFpbC1maWVsZC9DOlxcZGV2XFxsYS1tYWZpYS1kZXZcXHNyY1xcbWFpblxcdHMvc3JjXFxhcHBcXGNvbW1vblxcZGV0YWlsLWZpZWxkXFxkZXRhaWwtZmllbGQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbW1vbi9kZXRhaWwtZmllbGQvZGV0YWlsLWZpZWxkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUcsaUJBQUE7QUNBSCIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9kZXRhaWwtZmllbGQvZGV0YWlsLWZpZWxkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxibFxyXG57XHJcbiAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59IiwiLmxibCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'detail-field',\r\n  templateUrl: './detail-field.component.html',\r\n  styleUrls: ['./detail-field.component.scss']\r\n})\r\nexport class DetailFieldComponent implements OnInit\r\n{\r\n  /*-------------------------------------------------------------------\r\n  *                           ATTRIBUTES\r\n  *-------------------------------------------------------------------*/\r\n  /**\r\n   *\r\n   */\r\n  @Input()\r\n  label: string;\r\n  /**\r\n   *\r\n   */\r\n  @Input()\r\n  value: string;\r\n  /**\r\n   *\r\n   */\r\n  @Input()\r\n  valueCSSClass: string;\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORs\r\n  *-------------------------------------------------------------------*/\r\n  /**\r\n   *\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n   *\r\n   */\r\n  ngOnInit()\r\n  {\r\n    this.value = ( this.value && this.value.length ) ? this.value : '-';\r\n  }\r\n}\r\n","module.exports = \".header-container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.dropdown-menu {\\n  border-top-left-radius: 10px;\\n  border-bottom-left-radius: 10px;\\n  border-bottom-right-radius: 10px;\\n  padding: 20px;\\n  width: 280px;\\n}\\n\\n.rounded-logo {\\n  border-radius: 50%;\\n  width: 50px;\\n  height: 50px;\\n  align-content: center;\\n  background-color: #4ea4b1;\\n}\\n\\n.empresa-item {\\n  padding: 10px 30px;\\n}\\n\\n.delete-button {\\n  color: black;\\n  cursor: pointer;\\n}\\n\\n.delete-button:hover {\\n  color: red !important;\\n}\\n\\n.div-recursos {\\n  cursor: pointer;\\n}\\n\\n.goToStore {\\n  cursor: pointer;\\n  color: black;\\n}\\n\\n.goToStore:hover {\\n  color: #66a1ad;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2hlYWRlci9DOlxcZGV2XFxsYS1tYWZpYS1kZXZcXHNyY1xcbWFpblxcdHMvc3JjXFxhcHBcXGNvbW1vblxcaGVhZGVyXFxoZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbW1vbi9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxNQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0FDQ0o7O0FERUU7RUFDRSw0QkFBQTtFQUNBLCtCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVFO0VBRUksa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7QUNBTjs7QURJRTtFQUNFLGtCQUFBO0FDREo7O0FETUE7RUFFRSxZQUFBO0VBQ0EsZUFBQTtBQ0pGOztBRE1BO0VBQ0UscUJBQUE7QUNIRjs7QURNQTtFQUVFLGVBQUE7QUNKRjs7QURPQTtFQUVFLGVBQUE7RUFDQSxZQUFBO0FDTEY7O0FEUUE7RUFFRSxjQUFBO0FDTkY7O0FEU0E7RUFDRSxhQUFBO0FDTkYiLCJmaWxlIjoic3JjL2FwcC9jb21tb24vaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICB9XHJcblxyXG4gIC5kcm9wZG93bi1tZW51e1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTBweDtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICB3aWR0aDogMjgwcHg7XHJcbiAgfVxyXG5cclxuICAucm91bmRlZC1sb2dvXHJcbiAge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzRlYTRiMTtcclxuICBcclxuICB9XHJcblxyXG4gIC5lbXByZXNhLWl0ZW17XHJcbiAgICBwYWRkaW5nOiAxMHB4IDMwcHg7XHJcbiAgfVxyXG5cclxuICBcclxuXHJcbi5kZWxldGUtYnV0dG9uXHJcbntcclxuICBjb2xvcjpibGFjaztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLmRlbGV0ZS1idXR0b246aG92ZXJ7XHJcbiAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZGl2LXJlY3Vyc29zXHJcbntcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5nb1RvU3RvcmVcclxue1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBjb2xvcjogYmxhY2s7IFxyXG59XHJcblxyXG4uZ29Ub1N0b3JlOmhvdmVyXHJcbntcclxuICBjb2xvcjogIzY2YTFhZDsgXHJcbn1cclxuXHJcbi5oaWRkZW57XHJcbiAgZGlzcGxheTogbm9uZTtcclxufSIsIi5oZWFkZXItY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5kcm9wZG93bi1tZW51IHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTBweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwcHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiAyODBweDtcbn1cblxuLnJvdW5kZWQtbG9nbyB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGVhNGIxO1xufVxuXG4uZW1wcmVzYS1pdGVtIHtcbiAgcGFkZGluZzogMTBweCAzMHB4O1xufVxuXG4uZGVsZXRlLWJ1dHRvbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZGVsZXRlLWJ1dHRvbjpob3ZlciB7XG4gIGNvbG9yOiByZWQgIWltcG9ydGFudDtcbn1cblxuLmRpdi1yZWN1cnNvcyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmdvVG9TdG9yZSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uZ29Ub1N0b3JlOmhvdmVyIHtcbiAgY29sb3I6ICM2NmExYWQ7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\"","import { ChangeDetectorRef, Component, OnInit, ViewChild, ElementRef, Renderer, AfterViewInit, Inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ActivatedRoute, Router, ActivationStart } from '@angular/router';\r\nimport { TdLoadingService } from '@covalent/core';\r\nimport { OpenSnackBarService } from '../open-snackbar/open-snackbar.service';\r\nimport { AutenticacaoService } from '../autenticacao/autenticacao.service';\r\nimport { Usuario } from 'src/generated/entities';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit\r\n{\r\n  /*-------------------------------------------------------------------\r\n  *                           ATRIBUTES\r\n  *-------------------------------------------------------------------*/\r\n \r\n  public title = \"\";\r\n\r\n  public menus : any[] = [\r\n    {title: \"Ambientes\", icon: 'event_seat', router: 'ambiente'},\r\n    {title: \"Cidade\", icon: 'location_on', router: 'cidade', onlyFranquiador: true},\r\n    {title: \"Clientes\", icon: 'people', router: 'cliente'},\r\n    {title: \"Compra\", icon: 'shopping_cart', router: 'compra'},\r\n    {title: \"Condições de pagamentos\", icon: 'attach_money', router: 'condicao-pagamento'},\r\n    {title: \"Contas á pagar\", icon: 'work', router: 'contas-a-pagar'},\r\n    {title: \"Contas á receber\", icon: 'card_giftcard', router: 'contas-a-receber'},\r\n    {title: \"Estado\", icon: 'location_on', router: 'estado', onlyFranquiador: true},\r\n    {title: \"Formas de pagamentos\", icon: 'payment', router: 'forma-pagamento'},\r\n    {title: \"Fornecedores\", icon: 'people_outline', router: 'fornecedor', ambos: true},\r\n    {title: \"Franquias\", icon: 'business', router: 'franquia', onlyFranquiador: true},\r\n    {title: \"Grupo de produtos\", icon: 'style', router: 'grupo-produto', onlyFranquiador: true},\r\n    {title: \"Mesas\", icon: 'local_bar', router: 'mesa'},\r\n    {title: \"País\", icon: 'location_on', router: 'pais', onlyFranquiador: true},\r\n    {title: \"Produtos\", icon: 'assignment_turned_in', router: 'produto', ambos: true},\r\n    {title: \"Usuários\", icon: 'account_circle', router: 'usuario', onlyFranquiador: true},\r\n    {title: \"Venda\", icon: 'gavel', router: 'venda'},\r\n  ]\r\n\r\n  \r\n  public isFranquiado = false;\r\n\r\n  public usuarioAutenticado: Usuario = {};\r\n\r\n  \r\n  /*-------------------------------------------------------------------\r\n  *                           CONSTRUCTOR\r\n  *-------------------------------------------------------------------*/\r\n  /**\r\n   * \r\n   * @param pessoaService \r\n   */\r\n  constructor(\r\n    private autenticacaoService: AutenticacaoService,\r\n    public activatedRoute: ActivatedRoute,\r\n    public detectionRef: ChangeDetectorRef,\r\n    public router: Router)\r\n  {\r\n    router.events.subscribe( e => {\r\n      if(e instanceof ActivationStart)\r\n      {\r\n        this.title = e.snapshot.data.title;\r\n      }\r\n    })\r\n\r\n   \r\n  }\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n  ngOnInit()\r\n  {\r\n    this.autenticacaoService.usuarioAutenticado().then( result => {\r\n      this.usuarioAutenticado = this.autenticacaoService.usuario;\r\n      this.isFranquiado = this.autenticacaoService.isFranquiado;\r\n    });\r\n\r\n  }\r\n\r\n  logout(){\r\n    window.location.href = '/logout';\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  ngOnDestroy()\r\n  {\r\n   \r\n  }\r\n\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\r\n\r\n@Injectable()\r\nexport class OpenSnackBarService{\r\n\r\n    constructor(private snackbar: MatSnackBar)\r\n    {\r\n    }\r\n\r\n    public openSuccess(message: string, time = 5000): void\r\n    {\r\n        this.snackbar.open(message, 'Fechar',  {\r\n            duration: time,\r\n            panelClass: [\"bgc-green-700\", \"tc-grey-50\", \"my-snack-bar\"]\r\n        })\r\n    }\r\n\r\n    public openError(message: string, time = 5000): void\r\n    {\r\n        this.snackbar.open(message, 'Fechar',  {\r\n            duration: time,\r\n            panelClass: [\"bgc-red-700\", \"tc-grey-50\", \"my-snack-bar\"]\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginationService\n{\n\n  constructor() { }\n\n  /** PAGINATION SERVICE */\n  /**\n * Cria um pageRequest com as informações passadas\n * @param sortProperty Atributo que irá ordenar a grid por padrão\n * @param sortDirection Ordem por ASC ou DESC\n * @param size Quantidade de dados exibidos na tela (Ex: 5, 10, 15, 20, etc.)\n */\n  public pageRequest(sortProperty: string, sortDirection: string, size: number = 5): any\n  {\n    let pageRequest = {\n      content: [],\n      totalPages: 0,\n      pageable: {\n        page: 0,\n        size: size, // Ex: 5, 10, 15, 20, etc.\n        sort: {\n          orders: [{\n            direction: sortDirection, // Ex: ASC\n            property: sortProperty, // Ex: prazoLimite\n            nullHandlingHint: \"NATIVE\"\n          }]\n        }\n      }\n    };\n\n    return pageRequest;\n  }\n\n  /**\n   * Configura o objeto de sort\n   * @param sortEvent\n   */\n  public sort(sortEvent): any\n  {\n    /*this.model.pageRequest.pageable.sort*/\n    let sort = {\n      orders: [{\n        direction: sortEvent.order.toString() == 'ASC' ? 'ASC' : 'DESC',\n        property: sortEvent.name,\n        nullHandlingHint: \"NATIVE\"\n      }]\n    };\n\n    return sort;\n  }\n\n  /**\n   *\n   * @param result\n   * @param pageRequest\n   */\n  public fixPageRequest(result, pageRequest): any\n  {\n    let pages = Math.ceil(result.totalElements / result.size);\n\n    let fixedPageRequest = {\n      content: result.content ? result.content : result,\n      totalElements: result.totalElements,\n      numberOfElements: result.numberOfElements,\n      totalPages: pages,\n      pageable: {\n        page: result.number,\n        size: result.size,\n        sort: {\n          orders: [{\n            direction: pageRequest.pageable.sort.orders[0].direction,\n            property: pageRequest.pageable.sort.orders[0].property,\n            nullHandlingHint: \"NATIVE\"\n          }]\n        }\n      }\n    };\n\n    return fixedPageRequest;\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID } from '@angular/core';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { GeneratedModule } from 'src/generated/generated.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule, DecimalPipe, registerLocaleData } from '@angular/common';\r\nimport { CovalentLayoutModule, CovalentStepsModule, CovalentChipsModule, CovalentFileModule, CovalentExpansionPanelModule, CovalentPagingModule, CovalentLoadingModule, CovalentMediaModule, CovalentMessageModule, CovalentCommonModule, CovalentDataTableModule, CovalentDialogsModule, CovalentSearchModule, TdLayoutComponent, TdDialogService } from '@covalent/core';\r\nimport { MatAutocompleteModule, MatIconModule, MatSelectModule, MatDatepickerModule, MatSlideToggleModule, MatMenuModule, MatInputModule, MatCheckboxModule, MatRadioModule, MatSidenavModule, MatSnackBarModule, MatDialogModule, MatCardModule, MatButtonModule, MatToolbarModule, MatListModule, MatTooltipModule, MatProgressSpinnerModule, MatButtonToggleModule, MatTabsModule, MatExpansionModule, MatGridListModule, MatTreeModule, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { OpenSnackBarService } from './open-snackbar/open-snackbar.service';\r\nimport { BROKER_CONFIGURATION } from 'src/generated/services-wrapper';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { UppercaseDirective } from './uppercase/uppercase.directive';\r\nimport { DetailFieldComponent } from './detail-field/detail-field.component';\r\n\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\nimport localePt from '@angular/common/locales/pt';\r\nimport { AutoCompleteWithRedirectComponent } from './auto-complete-with-redirect/auto-complete-with-redirect.component';\r\n\r\n\r\nregisterLocaleData(localePt);\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HeaderComponent,\r\n        UppercaseDirective,\r\n        DetailFieldComponent,\r\n        AutoCompleteWithRedirectComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        \r\n        GeneratedModule,\r\n        HttpClientModule,\r\n        FlexLayoutModule,\r\n        LayoutModule,\r\n        RouterModule,\r\n        TextMaskModule,\r\n        \r\n        CovalentLayoutModule,\r\n        CovalentStepsModule,\r\n        CovalentChipsModule,\r\n        CovalentFileModule,\r\n        CovalentExpansionPanelModule,\r\n        CovalentPagingModule,\r\n        CovalentLoadingModule,\r\n        CovalentMediaModule,\r\n        CovalentMessageModule,\r\n        CovalentCommonModule,\r\n        CovalentDataTableModule,\r\n        CovalentDialogsModule,\r\n        CovalentSearchModule,\r\n        CurrencyMaskModule,\r\n        \r\n        MatAutocompleteModule,\r\n        MatIconModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatSlideToggleModule,\r\n        MatMenuModule,\r\n        MatInputModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatSidenavModule,\r\n        MatSnackBarModule,\r\n        MatDialogModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatListModule,\r\n        MatTooltipModule,\r\n        MatProgressSpinnerModule,\r\n        MatButtonToggleModule,\r\n        MatTabsModule,\r\n        MatExpansionModule,\r\n        MatAutocompleteModule,\r\n        MatGridListModule,\r\n        MatTreeModule,\r\n        MatNativeDateModule\r\n    ],\r\n    providers: [\r\n        OpenSnackBarService,\r\n        TdLayoutComponent,\r\n        TdDialogService,\r\n        {\r\n            provide: BROKER_CONFIGURATION,\r\n            useValue: {\r\n                path: '/broker',\r\n                useMoment: true\r\n            }\r\n        },\r\n        { provide: LOCALE_ID, useValue: 'pt-BR' },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'pt-BR' },\r\n    ],\r\n    exports: [\r\n        HeaderComponent,\r\n        UppercaseDirective,\r\n        DetailFieldComponent,\r\n        AutoCompleteWithRedirectComponent,\r\n      \r\n        CommonModule,\r\n        FormsModule,\r\n        \r\n        GeneratedModule,\r\n        HttpClientModule,\r\n        FlexLayoutModule,\r\n        LayoutModule,\r\n        RouterModule,\r\n        TextMaskModule,\r\n        CurrencyMaskModule,\r\n        \r\n        CovalentLayoutModule,\r\n        CovalentStepsModule,\r\n        CovalentChipsModule,\r\n        CovalentFileModule,\r\n        CovalentExpansionPanelModule,\r\n        CovalentPagingModule,\r\n        CovalentLoadingModule,\r\n        CovalentMediaModule,\r\n        CovalentMessageModule,\r\n        CovalentCommonModule,\r\n        CovalentDataTableModule,\r\n        CovalentDialogsModule,\r\n        CovalentSearchModule,\r\n        \r\n        MatAutocompleteModule,\r\n        MatIconModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatSlideToggleModule,\r\n        MatMenuModule,\r\n        MatInputModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatSidenavModule,\r\n        MatSnackBarModule,\r\n        MatDialogModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatListModule,\r\n        MatTooltipModule,\r\n        MatProgressSpinnerModule,\r\n        MatButtonToggleModule,\r\n        MatTabsModule,\r\n        MatExpansionModule,\r\n        MatAutocompleteModule,\r\n        MatGridListModule,\r\n        MatTreeModule,\r\n        MatNativeDateModule\r\n    ],\r\n    entryComponents: [],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class SharedCommonModule { }\r\n","import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\r\n@Directive({\r\n  selector: '[uppercase]'\r\n})\r\nexport class UppercaseDirective {\r\n  \r\n  @Output() ngModelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  value: any;\r\n\r\n  @HostListener('input', ['$event']) onInputChange($event) {\r\n\r\n    console.log($event)\r\n    this.value = $event.target.value.toUpperCase();\r\n    this.ngModelChange.emit(this.value);\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXN1YXJpby91c3VhcmlvLWZvcm0vdXN1YXJpby1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { UsuarioService, FranquiaService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { Franquia, Usuario, PerfilUsuario, PerfilUsuarioValues } from 'src/generated/entities';\r\nimport { AutenticacaoService } from 'src/app/common/autenticacao/autenticacao.service';\r\n\r\n@Component({\r\n  selector: 'app-usuario-form',\r\n  templateUrl: './usuario-form.component.html',\r\n  styleUrls: ['./usuario-form.component.scss']\r\n})\r\nexport class UsuarioFormComponent implements OnInit\r\n{\r\n\r\n\r\n  /*-------------------------------------------------------------------\r\n    *                           ATTRIBUTES\r\n    *-------------------------------------------------------------------*/\r\n\r\n  public title = \"\";\r\n\r\n  public usuario: Usuario = { franquia: {}, perfilUsuario: 'FRANQUEADO' };\r\n\r\n  public maskCpf = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\r\n\r\n  public maskTelefone = ['(', /\\d/, /\\d/, ')', ' ', /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n\r\n  public confSenha = null;\r\n\r\n  public franquias: Franquia[];\r\n\r\n  public type: PerfilUsuario;\r\n\r\n  constructor(\r\n    private usuarioService: UsuarioService,\r\n    private openSnackBarService: OpenSnackBarService,\r\n    private franquiaService: FranquiaService,\r\n    public dialogRef: MatDialogRef<UsuarioFormComponent>,\r\n    private autenticacaoService: AutenticacaoService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  )\r\n  {\r\n    if (data.usuarioId != null)\r\n    {\r\n      this.onFindUsuarioById(data.usuarioId);\r\n    }\r\n\r\n    this.onListFranquias(\"\");\r\n  }\r\n\r\n\r\n\r\n  async ngOnInit()\r\n  {\r\n    if (this.data.usuarioId)\r\n      this.title = \"Alterar usuário\";\r\n    else\r\n      this.title = \"Inserir usuário\";\r\n\r\n    this.type = this.autenticacaoService.usuario.perfilUsuario;\r\n  }\r\n\r\n\r\n\r\n\r\n  /*-------------------------------------------------------------------\r\n  *                           BEHAVIORS\r\n  *-------------------------------------------------------------------*/\r\n\r\n  private onFindUsuarioById(usuarioId: any)\r\n  {\r\n    this.usuarioService.findUsuarioById(usuarioId).subscribe(usuario =>\r\n    {\r\n      this.usuario = usuario;\r\n    }, err => this.openSnackBarService.openError(err.message))\r\n\r\n  }\r\n\r\n  public changeTipo(){\r\n    if(this.usuario.perfilUsuario == 'FRANQUEADOR'){\r\n      this.usuario.franquia = null;\r\n    }\r\n  }\r\n\r\n  public onSubmit(form): void\r\n  {\r\n\r\n    if(form.invalid){\r\n      this.openSnackBarService.openError(`Todos os campos com * devem ser preenchidos.`);\r\n      return;\r\n    }\r\n\r\n    if ( this.usuario.perfilUsuario == 'FRANQUEADO' && (!this.usuario.franquia || (this.usuario.franquia && !this.usuario.franquia.codigo)))\r\n    {\r\n      this.openSnackBarService.openError(\"O campo franquia deve ser preenchido.\");\r\n      return;\r\n    }\r\n\r\n    if (typeof this.usuario.cpf == \"string\")\r\n    {\r\n      this.usuario.cpf = this.usuario.cpf.replace(/\\.|-/gi, '');\r\n\r\n      if (!this.validaCPF(this.usuario.cpf))\r\n      {\r\n        this.openSnackBarService.openError('O campo CPF está inválido.');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    if (this.usuario.telefone) \r\n    {\r\n      var numb = this.usuario.telefone.match(/\\d/g);\r\n      var numbString = numb.join(\"\").toString();\r\n\r\n      if (numbString.length != 11)\r\n      {\r\n        this.openSnackBarService.openError('O campo telefone está inválido.');\r\n        return;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.usuario.telefone = this.usuario.telefone.replace(/\\.|-/gi, '');\r\n    }\r\n\r\n    if (this.usuario.senha && (this.usuario.senha != this.confSenha))\r\n    {\r\n      this.openSnackBarService.openError('O campo senha e confimação não conferem.');\r\n      return;\r\n    }\r\n\r\n    if (!this.usuario.codigo)\r\n    {\r\n      this.usuarioService.insertUsuario(this.usuario).subscribe(usuario =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Usuario salvo com sucesso.\");\r\n        this.dialogRef.close(this.usuario);\r\n      }, err => this.openSnackBarService.openError(err.message))\r\n    }\r\n    else\r\n    {\r\n      this.usuarioService.updateUsuario(this.usuario).subscribe(usuario =>\r\n      {\r\n        this.openSnackBarService.openSuccess(\"Usuario atualizado com sucesso.\");\r\n        this.dialogRef.close(this.usuario);\r\n      }, err => this.openSnackBarService.openError(err.message))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n     * Método para validar o cpf do usuário\r\n     * fonte: https://www.geradorcpf.com/javascript-validar-cpf.htm\r\n     * @param strCPF\r\n     */\r\n  private validaCPF(cpf)\r\n  {\r\n    cpf = cpf.replace(/[^\\d]+/g, '');\r\n    if (cpf == '') return false;\r\n    // Elimina CPFs invalidos conhecidos\r\n    if (cpf.length != 11 ||\r\n      cpf == \"00000000000\" ||\r\n      cpf == \"11111111111\" ||\r\n      cpf == \"22222222222\" ||\r\n      cpf == \"33333333333\" ||\r\n      cpf == \"44444444444\" ||\r\n      cpf == \"55555555555\" ||\r\n      cpf == \"66666666666\" ||\r\n      cpf == \"77777777777\" ||\r\n      cpf == \"88888888888\" ||\r\n      cpf == \"99999999999\")\r\n      return false;\r\n    // Valida 1o digito\r\n    let add = 0;\r\n    for (let i = 0; i < 9; i++)\r\n      add += parseInt(cpf.charAt(i)) * (10 - i);\r\n    let rev = 11 - (add % 11);\r\n    if (rev == 10 || rev == 11)\r\n      rev = 0;\r\n    if (rev != parseInt(cpf.charAt(9)))\r\n      return false;\r\n    // Valida 2o digito\r\n    add = 0;\r\n    for (let i = 0; i < 10; i++)\r\n      add += parseInt(cpf.charAt(i)) * (11 - i);\r\n    rev = 11 - (add % 11);\r\n    if (rev == 10 || rev == 11)\r\n      rev = 0;\r\n    if (rev != parseInt(cpf.charAt(10)))\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n\r\n  public onListFranquias(filter)\r\n  {\r\n    this.franquiaService.listFranquiasByFilters(filter ? filter : \"\", \"\", null).subscribe(franquiaPage =>\r\n    {\r\n      this.franquias = franquiaPage.content.filter(c => c.situacao);\r\n    })\r\n  }\r\n\r\n  public displayFn(franquia?: Franquia): string | undefined\r\n  {\r\n    return franquia ? franquia.franquia : undefined;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXN1YXJpby91c3VhcmlvLWxpc3QvdXN1YXJpby1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioFormComponent } from '../usuario-form/usuario-form.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TdDialogService, ITdDataTableColumn, IPageChangeEvent } from '@covalent/core';\r\nimport { PaginationService } from 'src/app/common/pagination/pagination.service';\r\nimport { UsuarioService } from 'src/generated/services';\r\nimport { OpenSnackBarService } from 'src/app/common/open-snackbar/open-snackbar.service';\r\nimport { Usuario } from 'src/generated/entities';\r\n\r\n\r\n@Component({\r\n    selector: 'app-usuario-list',\r\n    templateUrl: './usuario-list.component.html',\r\n    styleUrls: ['./usuario-list.component.scss']\r\n})\r\nexport class UsuarioListComponent implements OnInit\r\n{\r\n\r\n    /*-------------------------------------------------------------------\r\n      *                           ATTRIBUTES\r\n      *-------------------------------------------------------------------*/\r\n\r\n    public pageRequest: any = [];\r\n\r\n    public filters = {\r\n        nome: '',\r\n        situacao: null,\r\n        email: ''\r\n    }\r\n\r\n    /**\r\n       * Colunas da Grid\r\n       */\r\n    public tableColumns: ITdDataTableColumn[] = [\r\n        { name: 'codigo', label: 'CÓDIGO', sortable: false },\r\n        { name: 'nome', label: 'USUÁRIO', sortable: false },\r\n        { name: 'email', label: 'E-MAIL', sortable: false },\r\n        { name: 'telefone', label: 'TELEFONE', sortable: false },\r\n        { name: 'situacao', label: 'SITUAÇÃO', sortable: false },\r\n        { name: 'opcoes', label: 'OPÇÕES', tooltip: 'OPÇÕES', sortable: false, width: 150 }\r\n    ];\r\n\r\n    /**\r\n     * \r\n     * @param dialog \r\n     * @param _dialogService \r\n     * @param paginationService \r\n     * @param openSnackBarService \r\n     * @param usuarioService \r\n     */\r\n    constructor(public dialog: MatDialog,\r\n        private _dialogService: TdDialogService,\r\n        private paginationService: PaginationService,\r\n        private openSnackBarService: OpenSnackBarService,\r\n        private usuarioService: UsuarioService) \r\n    {\r\n        this.pageRequest = paginationService.pageRequest('nome', 'ASC', 5);\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.onListUsuarios();\r\n    }\r\n\r\n    /*-------------------------------------------------------------------\r\n    *                           BEHAVIORS\r\n    *-------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Método responsável pela listagem dos avisos utilizando os filtros informados pelo usuário\r\n     */\r\n    public onListUsuarios(filters: Boolean = true): void\r\n    {\r\n        if (filters)\r\n        {\r\n            this.pageRequest.pageable.page = 0;\r\n        }\r\n\r\n        this.usuarioService.listUsuariosByFilters(\r\n            this.filters.nome,\r\n            this.filters.situacao,\r\n            this.filters.email,\r\n            this.pageRequest.pageable\r\n        ).subscribe((result) =>\r\n        {\r\n            this.pageRequest = this.paginationService.fixPageRequest(result, this.pageRequest);\r\n        }), (error) => { this.openSnackBarService.openError(error.message) }\r\n    }\r\n\r\n    public clearFilters()\r\n    {\r\n        this.filters = {\r\n            nome: '',\r\n            situacao: null,\r\n            email: ''\r\n        }\r\n        \r\n        this.onListUsuarios();\r\n    }\r\n\r\n\r\n    public openForm(usuario)\r\n    {\r\n        const dialogRef = this.dialog.open(UsuarioFormComponent, {\r\n            width: '600px',\r\n            height: 'auto',\r\n            data: { usuarioId: usuario ? usuario.codigo : null }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(usuarioSaved =>\r\n        {\r\n            if(usuarioSaved) this.onListUsuarios();\r\n        });\r\n    }\r\n\r\n\r\n    public atualizarSituacaoUsuario(usuario: Usuario)\r\n    {\r\n        if(usuario.situacao)\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja excluir este usuario ?\",\r\n                title: \"Excluir usuario\" ,\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.usuarioService.deleteUsuario(usuario.codigo).subscribe( result => {\r\n                        this.openSnackBarService.openSuccess('Usuario excluído com sucesso.');\r\n                        this.onListUsuarios();\r\n                    }, err => {\r\n                        if(err.exception.javaClassName == 'java.lang.IllegalArgumentException'){\r\n                            this.openSnackBarService.openError(err.message)\r\n                        }\r\n                        else\r\n                            this._dialogService.openConfirm({\r\n                                message: \"Não foi possível excluir este usuario pois o mesmo está relacionado a outro registro. Deseja desativar ?\",\r\n                                title: \"Desativar usuario\",\r\n                                cancelButton: 'CANCELAR',\r\n                                acceptButton: 'CONFIRMAR',\r\n                                width: '500px'\r\n                            }).afterClosed().subscribe((accept: boolean) =>\r\n                            {\r\n                                if (accept)\r\n                                {\r\n                                    this.usuarioService.updateSituacaoUsuario(usuario.codigo, !usuario.situacao).subscribe( result => {\r\n                                        this.openSnackBarService.openSuccess('Usuario desativado com sucesso.');\r\n                                        this.onListUsuarios();\r\n                                    }, err => this.openSnackBarService.openError(err.message))\r\n                                }\r\n                            });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this._dialogService.openConfirm({\r\n                message: \"Tem certeza que deseja ativar esta usuario ?\",\r\n                title: \"Ativar usuario\",\r\n                cancelButton: 'CANCELAR',\r\n                acceptButton: 'CONFIRMAR',\r\n                width: '500px'\r\n            }).afterClosed().subscribe((accept: boolean) =>\r\n            {\r\n                if (accept)\r\n                {\r\n                    this.usuarioService.updateSituacaoUsuario(usuario.codigo, !usuario.situacao).subscribe( result => {\r\n                        this.openSnackBarService.openSuccess('Usuario ativado com sucesso.');\r\n                        this.onListUsuarios();\r\n                    }, err => this.openSnackBarService.openError(err.message))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public page(pagingEvent: IPageChangeEvent)\r\n    {\r\n        this.pageRequest.pageable.page = pagingEvent.page - 1;\r\n        this.pageRequest.pageable.size = pagingEvent.pageSize;\r\n\r\n        this.onListUsuarios(false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { UsuarioListComponent } from './usuario-list/usuario-list.component';\r\nimport { UsuarioRouting } from './usuario.routing';\r\nimport { UsuarioFormComponent } from './usuario-form/usuario-form.component';\r\nimport { SharedCommonModule } from 'src/app/common/shared-common.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UsuarioListComponent,\r\n    UsuarioFormComponent,\r\n  ],\r\n  imports: [\r\n    UsuarioRouting,\r\n    SharedCommonModule\r\n  ],\r\n  exports: [\r\n    UsuarioListComponent,\r\n    UsuarioFormComponent,\r\n    UsuarioRouting\r\n  ],\r\n  entryComponents: [\r\n    UsuarioFormComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class UsuarioModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UsuarioListComponent } from './usuario-list/usuario-list.component';\r\nimport { UsuarioFormComponent } from './usuario-form/usuario-form.component';\r\nimport { AuthGuard } from 'src/app/common/autenticacao/auth-guard.service';\r\n\r\nconst usuarioRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: UsuarioListComponent,\r\n                data: {\r\n                    title: 'Usuários',\r\n                    onlyFranquiador: true\r\n                },\r\n                canActivate: [AuthGuard]\r\n            }\r\n        ]\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(usuarioRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsuarioRouting { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { EstadoService, PaisService, CondicaoPagamentoService, FormaPagamentoService, AmbienteService, ContasAReceberService, ProdutoService, VendaService, MesaService, FranquiaService, GrupoProdutoService, ArquivoService, CidadeService, ContasAPagarService, ClienteService, UsuarioService, FornecedorService, CompraService } from './services';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n    providers: [\n        EstadoService, PaisService, CondicaoPagamentoService, FormaPagamentoService, AmbienteService, ContasAReceberService, ProdutoService, VendaService, MesaService, FranquiaService, GrupoProdutoService, ArquivoService, CidadeService, ContasAPagarService, ClienteService, UsuarioService, FornecedorService, CompraService\n    ]\n})\nexport class GeneratedModule {\n\n}","import { InjectionToken } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * path é o caminho SEM BARRA AO FINAL para o broker. Por padrão é simplesmente 'broker'\n */\nexport interface BrokerConfiguration {\n    path: string,\n    useMoment?: boolean\n}\n\nexport let BROKER_CONFIGURATION = new InjectionToken<BrokerConfiguration>('broker.configuration');\n\n\n/////////////////\n/////////////////\n/////////////////\n/////////////////\n\nexport function dwrWrapper(configuration: BrokerConfiguration, serviceName: string, methodName: string, ...args: any[]): Observable<any> {\n    return Observable.create((observer: Observer<any>) => {\n        loadDwrIfNeeded(configuration).then(() => {\n            loadServiceIfNeeded(configuration, serviceName).then(service => {\n                args.push({\n                    callback(result) {\n                        observer.next(result);\n                        observer.complete();\n                    },\n                    errorHandler(message, exception) {\n                        observer.error({ message, exception });\n                        console.error(message, exception);\n                        observer.complete();\n                    }\n                });\n                service[methodName].apply(service, args);\n            });\n        });\n    });\n}\n\nfunction loadDwrIfNeeded(configuration: BrokerConfiguration): Promise<void> {\n    return new Promise<void>(resolve => {\n        if ((window as any).dwr) {\n            if ( configuration.useMoment ) {\n                shimDwrThenResolve( resolve );\n            } else {\n                resolve();\n            }\n        } else {\n            const path = `${configuration.path}/engine.js`;\n            const tag: HTMLScriptElement = document.createElement('script');\n            tag.src = path;\n            tag.type = 'text/javascript';\n            if ( configuration.useMoment ) {\n                tag.onload = () => shimDwrThenResolve( resolve );\n                tag.onerror = () => shimDwrThenResolve( resolve );\n            } else {\n                tag.onload = () => resolve();\n                tag.onerror = () => resolve();\n            }\n            document.body.appendChild(tag);\n        }\n    });\n}\n\n/**\n * Intercepta as chamadas de convert do dwr para converter o tipo Moment para Date caso ele este sendo utilizado\n * @param resolve \n */\nfunction shimDwrThenResolve(resolve: Function) {\n    (function(dwr) {\n        const original = dwr.engine.serialize.convert;\n        dwr.engine.serialize.convert = function(batch, directrefmap, otherrefmap, data, name, depth) {\n            if (data != null && typeof data == 'object' && data._isAMomentObject) {\n                original(batch, directrefmap, otherrefmap, data.toDate(), name, depth);\n            } else {\n                original(batch, directrefmap, otherrefmap, data, name, depth);\n            }\n        };\n    })(window['dwr']);\n\n    resolve();\n}\n\nfunction loadServiceIfNeeded(configuration: BrokerConfiguration, name: string): Promise<any> {\n    return new Promise<any>(resolve => {\n        if ((window as any)[name]) {\n            resolve((window as any)[name]);\n        } else {\n            const path = `${configuration.path}/interface/${name}.js`;\n            const tag: HTMLScriptElement = document.createElement('script');\n            tag.src = path;\n            tag.type = 'text/javascript';\n            tag.onload = () => resolve((window as any)[name]);\n            tag.onerror = () => resolve();\n            document.body.appendChild(tag);\n        }\n    });\n}","import { Inject, Injectable } from '@angular/core';\nimport { BROKER_CONFIGURATION, BrokerConfiguration, dwrWrapper } from './services-wrapper';\nimport { Observable } from 'rxjs';\nimport { Usuario, Ambiente, Page, Estado, Cidade, PageRequest, SortDirection, Pageable, TipoFrete, NullHandling, Venda, ContasAReceber, AmbienteImagem, Sort, Pais, Cliente, Produto, Arquivo, Mesa, PerfilUsuario, ItemCompra, ItemVenda, CondicaoPagamento, SortOrder, Franquia, CondicaoPagamentoFornecedor, Fornecedor, GrupoProduto, CondicaoPagamentoParcela, FormaPagamento, Compra, Estoque, ContasAPagar } from './entities';\n\n\n@Injectable()\nexport class EstadoService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public updateEstado(arg0?: Estado): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'estadoService', 'updateEstado', arg0) as Observable<void>;\n    }\n\n    public deleteEstado(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'estadoService', 'deleteEstado', arg0) as Observable<void>;\n    }\n\n    public findEstadoById(arg0?: number): Observable<Estado> {\n        return dwrWrapper(this.brokerConfiguration, 'estadoService', 'findEstadoById', arg0) as Observable<Estado>;\n    }\n\n    public insertEstado(arg0?: Estado): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'estadoService', 'insertEstado', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoEstado(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'estadoService', 'updateSituacaoEstado', arg0, arg1) as Observable<void>;\n    }\n\n    public listEstadosByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<Estado>> {\n        return dwrWrapper(this.brokerConfiguration, 'estadoService', 'listEstadosByFilters', arg0, arg1) as Observable<Page<Estado>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class PaisService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public deletePais(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'paisService', 'deletePais', arg0) as Observable<void>;\n    }\n\n    public findPaisById(arg0?: number): Observable<Pais> {\n        return dwrWrapper(this.brokerConfiguration, 'paisService', 'findPaisById', arg0) as Observable<Pais>;\n    }\n\n    public updatePais(arg0?: Pais): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'paisService', 'updatePais', arg0) as Observable<void>;\n    }\n\n    public insertPais(arg0?: Pais): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'paisService', 'insertPais', arg0) as Observable<void>;\n    }\n\n    public listPaisesByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<Pais>> {\n        return dwrWrapper(this.brokerConfiguration, 'paisService', 'listPaisesByFilters', arg0, arg1) as Observable<Page<Pais>>;\n    }\n\n    public updateSituacaoPais(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'paisService', 'updateSituacaoPais', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class CondicaoPagamentoService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertCondicaoPagamento(arg0?: CondicaoPagamento): Observable<number> {\n        return dwrWrapper(this.brokerConfiguration, 'condicaoPagamentoService', 'insertCondicaoPagamento', arg0) as Observable<number>;\n    }\n\n    public updateCondicaoPagamento(arg0?: CondicaoPagamento, arg1?: number[]): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'condicaoPagamentoService', 'updateCondicaoPagamento', arg0, arg1) as Observable<void>;\n    }\n\n    public deleteCondicaoPagamento(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'condicaoPagamentoService', 'deleteCondicaoPagamento', arg0) as Observable<void>;\n    }\n\n    public listCondicaoPagamentosByFilters(arg0?: number, arg1?: string, arg2?: PageRequest): Observable<Page<CondicaoPagamento>> {\n        return dwrWrapper(this.brokerConfiguration, 'condicaoPagamentoService', 'listCondicaoPagamentosByFilters', arg0, arg1, arg2) as Observable<Page<CondicaoPagamento>>;\n    }\n\n    public findCondicaoPagamentoById(arg0?: number): Observable<CondicaoPagamento> {\n        return dwrWrapper(this.brokerConfiguration, 'condicaoPagamentoService', 'findCondicaoPagamentoById', arg0) as Observable<CondicaoPagamento>;\n    }\n\n    public updateSituacaoCondicaoPagamento(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'condicaoPagamentoService', 'updateSituacaoCondicaoPagamento', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class FormaPagamentoService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public updateFormaPagamento(arg0?: FormaPagamento): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'formaPagamentoService', 'updateFormaPagamento', arg0) as Observable<void>;\n    }\n\n    public findFormaPagamentoById(arg0?: number): Observable<FormaPagamento> {\n        return dwrWrapper(this.brokerConfiguration, 'formaPagamentoService', 'findFormaPagamentoById', arg0) as Observable<FormaPagamento>;\n    }\n\n    public insertFormaPagamento(arg0?: FormaPagamento): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'formaPagamentoService', 'insertFormaPagamento', arg0) as Observable<void>;\n    }\n\n    public deleteFormaPagamento(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'formaPagamentoService', 'deleteFormaPagamento', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoFormaPagamento(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'formaPagamentoService', 'updateSituacaoFormaPagamento', arg0, arg1) as Observable<void>;\n    }\n\n    public listFormaPagamentoByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<FormaPagamento>> {\n        return dwrWrapper(this.brokerConfiguration, 'formaPagamentoService', 'listFormaPagamentoByFilters', arg0, arg1) as Observable<Page<FormaPagamento>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class AmbienteService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertArquivo(arg0?: AmbienteImagem): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'insertArquivo', arg0) as Observable<void>;\n    }\n\n    public removeArquivo(arg0?: string): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'removeArquivo', arg0) as Observable<void>;\n    }\n\n    public updateAmbiente(arg0?: Ambiente, arg1?: number[]): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'updateAmbiente', arg0, arg1) as Observable<void>;\n    }\n\n    public findAmbienteById(arg0?: number): Observable<Ambiente> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'findAmbienteById', arg0) as Observable<Ambiente>;\n    }\n\n    public deleteAmbiente(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'deleteAmbiente', arg0) as Observable<void>;\n    }\n\n    public insertAmbiente(arg0?: Ambiente): Observable<number> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'insertAmbiente', arg0) as Observable<number>;\n    }\n\n    public updateSituacaoAmbiente(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'updateSituacaoAmbiente', arg0, arg1) as Observable<void>;\n    }\n\n    public updateAmbienteImagem(arg0?: AmbienteImagem): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'updateAmbienteImagem', arg0) as Observable<void>;\n    }\n\n    public insertAmbienteImagem(arg0?: AmbienteImagem): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'insertAmbienteImagem', arg0) as Observable<void>;\n    }\n\n    public listAmbientesByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<Ambiente>> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'listAmbientesByFilters', arg0, arg1) as Observable<Page<Ambiente>>;\n    }\n\n    public deleteAmbienteImagem(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'deleteAmbienteImagem', arg0) as Observable<void>;\n    }\n\n    public findAmbienteImagemByAmbienteId(arg0?: number): Observable<AmbienteImagem[]> {\n        return dwrWrapper(this.brokerConfiguration, 'ambienteService', 'findAmbienteImagemByAmbienteId', arg0) as Observable<AmbienteImagem[]>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class ContasAReceberService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertContaAReceber(arg0?: ContasAReceber): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'insertContaAReceber', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoContaAReceber(arg0?: ContasAReceber, arg1?: Boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'updateSituacaoContaAReceber', arg0, arg1) as Observable<void>;\n    }\n\n    public findContasAReceber(arg0?: string, arg1?: string, arg2?: string, arg3?: number): Observable<ContasAReceber[]> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'findContasAReceber', arg0, arg1, arg2, arg3) as Observable<ContasAReceber[]>;\n    }\n\n    public listContasAReceberByFilters(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: PageRequest): Observable<Page<ContasAReceber>> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'listContasAReceberByFilters', arg0, arg1, arg2, arg3, arg4) as Observable<Page<ContasAReceber>>;\n    }\n\n    public findContaAReceber(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: number): Observable<ContasAReceber> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'findContaAReceber', arg0, arg1, arg2, arg3, arg4) as Observable<ContasAReceber>;\n    }\n\n    public updateContaAReceber(arg0?: ContasAReceber): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'updateContaAReceber', arg0) as Observable<void>;\n    }\n\n    public makeReceiveContaAReceber(arg0?: ContasAReceber, arg1?: Boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAReceberService', 'makeReceiveContaAReceber', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class ProdutoService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertArquivo(arg0?: Produto): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'insertArquivo', arg0) as Observable<void>;\n    }\n\n    public removeArquivo(arg0?: string): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'removeArquivo', arg0) as Observable<void>;\n    }\n\n    public deleteProduto(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'deleteProduto', arg0) as Observable<void>;\n    }\n\n    public findProdutoById(arg0?: number): Observable<Produto> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'findProdutoById', arg0) as Observable<Produto>;\n    }\n\n    public insertProduto(arg0?: Produto): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'insertProduto', arg0) as Observable<void>;\n    }\n\n    public updateProduto(arg0?: Produto): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'updateProduto', arg0) as Observable<void>;\n    }\n\n    public listProdutosByFiltersToAssociation(arg0?: string, arg1?: number, arg2?: PageRequest): Observable<Page<Produto>> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'listProdutosByFiltersToAssociation', arg0, arg1, arg2) as Observable<Page<Produto>>;\n    }\n\n    public updateSituacaoProduto(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'updateSituacaoProduto', arg0, arg1) as Observable<void>;\n    }\n\n    public listProdutosByFilters(arg0?: string, arg1?: number, arg2?: PageRequest): Observable<Page<Produto>> {\n        return dwrWrapper(this.brokerConfiguration, 'produtoService', 'listProdutosByFilters', arg0, arg1, arg2) as Observable<Page<Produto>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class VendaService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertVenda(arg0?: Venda): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'vendaService', 'insertVenda', arg0) as Observable<void>;\n    }\n\n    public findVendaById(arg0?: string, arg1?: string, arg2?: string, arg3?: number): Observable<Venda> {\n        return dwrWrapper(this.brokerConfiguration, 'vendaService', 'findVendaById', arg0, arg1, arg2, arg3) as Observable<Venda>;\n    }\n\n    public updateSituacaoVenda(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'vendaService', 'updateSituacaoVenda', arg0, arg1, arg2, arg3, arg4) as Observable<void>;\n    }\n\n    public listVendasByFilters(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: PageRequest): Observable<Page<Venda>> {\n        return dwrWrapper(this.brokerConfiguration, 'vendaService', 'listVendasByFilters', arg0, arg1, arg2, arg3, arg4) as Observable<Page<Venda>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class MesaService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertMesa(arg0?: Mesa): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'insertMesa', arg0) as Observable<void>;\n    }\n\n    public updateMesa(arg0?: Mesa): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'updateMesa', arg0) as Observable<void>;\n    }\n\n    public deleteMesa(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'deleteMesa', arg0) as Observable<void>;\n    }\n\n    public listMesasByFilters(arg0?: number, arg1?: number, arg2?: PageRequest): Observable<Page<Mesa>> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'listMesasByFilters', arg0, arg1, arg2) as Observable<Page<Mesa>>;\n    }\n\n    public findMesaByNumeroMesa(arg0?: number): Observable<Mesa> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'findMesaByNumeroMesa', arg0) as Observable<Mesa>;\n    }\n\n    public findMesaByAmbienteId(arg0?: number): Observable<Mesa[]> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'findMesaByAmbienteId', arg0) as Observable<Mesa[]>;\n    }\n\n    public updateSituacaoMesa(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'mesaService', 'updateSituacaoMesa', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class FranquiaService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public deleteFranquia(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'deleteFranquia', arg0) as Observable<void>;\n    }\n\n    public insertArquivo(arg0?: Franquia): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'insertArquivo', arg0) as Observable<void>;\n    }\n\n    public updateFranquia(arg0?: Franquia): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'updateFranquia', arg0) as Observable<void>;\n    }\n\n    public insertFranquia(arg0?: Franquia): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'insertFranquia', arg0) as Observable<void>;\n    }\n\n    public removeArquivo(arg0?: string): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'removeArquivo', arg0) as Observable<void>;\n    }\n\n    public findFranquiaById(arg0?: number): Observable<Franquia> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'findFranquiaById', arg0) as Observable<Franquia>;\n    }\n\n    public listFranquiasByFilters(arg0?: string, arg1?: string, arg2?: PageRequest): Observable<Page<Franquia>> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'listFranquiasByFilters', arg0, arg1, arg2) as Observable<Page<Franquia>>;\n    }\n\n    public updateSituacaoFranquia(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'franquiaService', 'updateSituacaoFranquia', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class GrupoProdutoService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertArquivo(arg0?: GrupoProduto): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'insertArquivo', arg0) as Observable<void>;\n    }\n\n    public removeArquivo(arg0?: string): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'removeArquivo', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoGrupoProduto(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'updateSituacaoGrupoProduto', arg0, arg1) as Observable<void>;\n    }\n\n    public updateGrupoProduto(arg0?: GrupoProduto): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'updateGrupoProduto', arg0) as Observable<void>;\n    }\n\n    public findGrupoProdutoById(arg0?: number): Observable<GrupoProduto> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'findGrupoProdutoById', arg0) as Observable<GrupoProduto>;\n    }\n\n    public insertGrupoProduto(arg0?: GrupoProduto): Observable<number> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'insertGrupoProduto', arg0) as Observable<number>;\n    }\n\n    public listGrupoProdutosByFilters(arg0?: string, arg1?: number, arg2?: PageRequest): Observable<Page<GrupoProduto>> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'listGrupoProdutosByFilters', arg0, arg1, arg2) as Observable<Page<GrupoProduto>>;\n    }\n\n    public deleteGrupoProduto(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'grupoProdutoService', 'deleteGrupoProduto', arg0) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class ArquivoService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public insertArquivo(arg0?: HTMLInputElement): Observable<string> {\n        return dwrWrapper(this.brokerConfiguration, 'arquivoService', 'insertArquivo', arg0) as Observable<string>;\n    }\n\n    public deleteArquivo(arg0?: string): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'arquivoService', 'deleteArquivo', arg0) as Observable<void>;\n    }\n\n    public downloadArquivoByUuid(arg0?: string): Observable<string> {\n        return dwrWrapper(this.brokerConfiguration, 'arquivoService', 'downloadArquivoByUuid', arg0) as Observable<string>;\n    }\n\n    public findArquivoByUuid(arg0?: string): Observable<number> {\n        return dwrWrapper(this.brokerConfiguration, 'arquivoService', 'findArquivoByUuid', arg0) as Observable<number>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class CidadeService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public findCidadeById(arg0?: number): Observable<Cidade> {\n        return dwrWrapper(this.brokerConfiguration, 'cidadeService', 'findCidadeById', arg0) as Observable<Cidade>;\n    }\n\n    public insertCidade(arg0?: Cidade): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'cidadeService', 'insertCidade', arg0) as Observable<void>;\n    }\n\n    public deleteCidade(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'cidadeService', 'deleteCidade', arg0) as Observable<void>;\n    }\n\n    public updateCidade(arg0?: Cidade): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'cidadeService', 'updateCidade', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoCidade(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'cidadeService', 'updateSituacaoCidade', arg0, arg1) as Observable<void>;\n    }\n\n    public listCidadesByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<Cidade>> {\n        return dwrWrapper(this.brokerConfiguration, 'cidadeService', 'listCidadesByFilters', arg0, arg1) as Observable<Page<Cidade>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class ContasAPagarService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public findContasAPagar(arg0?: string, arg1?: string, arg2?: string, arg3?: number): Observable<ContasAPagar[]> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'findContasAPagar', arg0, arg1, arg2, arg3) as Observable<ContasAPagar[]>;\n    }\n\n    public findContaAPagar(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: number): Observable<ContasAPagar> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'findContaAPagar', arg0, arg1, arg2, arg3, arg4) as Observable<ContasAPagar>;\n    }\n\n    public insertContaAPagar(arg0?: ContasAPagar): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'insertContaAPagar', arg0) as Observable<void>;\n    }\n\n    public listContasAPagarByFilters(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: PageRequest): Observable<Page<ContasAPagar>> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'listContasAPagarByFilters', arg0, arg1, arg2, arg3, arg4) as Observable<Page<ContasAPagar>>;\n    }\n\n    public makePaymentContaAPagar(arg0?: ContasAPagar, arg1?: Boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'makePaymentContaAPagar', arg0, arg1) as Observable<void>;\n    }\n\n    public updateContaAPagar(arg0?: ContasAPagar): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'updateContaAPagar', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoContaAPagar(arg0?: ContasAPagar, arg1?: Boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'contasAPagarService', 'updateSituacaoContaAPagar', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class ClienteService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public findClienteById(arg0?: number): Observable<Cliente> {\n        return dwrWrapper(this.brokerConfiguration, 'clienteService', 'findClienteById', arg0) as Observable<Cliente>;\n    }\n\n    public insertCliente(arg0?: Cliente): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'clienteService', 'insertCliente', arg0) as Observable<void>;\n    }\n\n    public deleteCliente(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'clienteService', 'deleteCliente', arg0) as Observable<void>;\n    }\n\n    public updateCliente(arg0?: Cliente): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'clienteService', 'updateCliente', arg0) as Observable<void>;\n    }\n\n    public updateSituacaoCliente(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'clienteService', 'updateSituacaoCliente', arg0, arg1) as Observable<void>;\n    }\n\n    public listClientesByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<Cliente>> {\n        return dwrWrapper(this.brokerConfiguration, 'clienteService', 'listClientesByFilters', arg0, arg1) as Observable<Page<Cliente>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class UsuarioService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public findUsuarioById(arg0?: number): Observable<Usuario> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'findUsuarioById', arg0) as Observable<Usuario>;\n    }\n\n    public insertArquivo(arg0?: Usuario): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'insertArquivo', arg0) as Observable<void>;\n    }\n\n    public insertUsuario(arg0?: Usuario): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'insertUsuario', arg0) as Observable<void>;\n    }\n\n    public updateUsuario(arg0?: Usuario): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'updateUsuario', arg0) as Observable<void>;\n    }\n\n    public deleteUsuario(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'deleteUsuario', arg0) as Observable<void>;\n    }\n\n    public removeArquivo(arg0?: string): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'removeArquivo', arg0) as Observable<void>;\n    }\n\n    public getAuthenticatedUser(): Observable<Usuario> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'getAuthenticatedUser') as Observable<Usuario>;\n    }\n\n    public updateSituacaoUsuario(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'updateSituacaoUsuario', arg0, arg1) as Observable<void>;\n    }\n\n    public listUsuariosByFilters(arg0?: string, arg1?: Boolean, arg2?: string, arg3?: PageRequest): Observable<Page<Usuario>> {\n        return dwrWrapper(this.brokerConfiguration, 'usuarioService', 'listUsuariosByFilters', arg0, arg1, arg2, arg3) as Observable<Page<Usuario>>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class FornecedorService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public updateFornecedor(arg0?: Fornecedor): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'fornecedorService', 'updateFornecedor', arg0) as Observable<void>;\n    }\n\n    public insertFornecedor(arg0?: Fornecedor): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'fornecedorService', 'insertFornecedor', arg0) as Observable<void>;\n    }\n\n    public deleteFornecedor(arg0?: number): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'fornecedorService', 'deleteFornecedor', arg0) as Observable<void>;\n    }\n\n    public findFornecedorById(arg0?: number): Observable<Fornecedor> {\n        return dwrWrapper(this.brokerConfiguration, 'fornecedorService', 'findFornecedorById', arg0) as Observable<Fornecedor>;\n    }\n\n    public listFornecedorsByFilters(arg0?: string, arg1?: PageRequest): Observable<Page<Fornecedor>> {\n        return dwrWrapper(this.brokerConfiguration, 'fornecedorService', 'listFornecedorsByFilters', arg0, arg1) as Observable<Page<Fornecedor>>;\n    }\n\n    public updateSituacaoFornecedor(arg0?: number, arg1?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'fornecedorService', 'updateSituacaoFornecedor', arg0, arg1) as Observable<void>;\n    }\n\n\n}\n\n\n\n\n@Injectable()\nexport class CompraService {\n    constructor(@Inject(BROKER_CONFIGURATION) private brokerConfiguration: BrokerConfiguration) { }\n\n        public findCompraById(arg0?: string, arg1?: string, arg2?: string, arg3?: number): Observable<Compra> {\n        return dwrWrapper(this.brokerConfiguration, 'compraService', 'findCompraById', arg0, arg1, arg2, arg3) as Observable<Compra>;\n    }\n\n    public insertCompra(arg0?: Compra): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'compraService', 'insertCompra', arg0) as Observable<void>;\n    }\n\n    public listComprasByFilters(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: PageRequest): Observable<Page<Compra>> {\n        return dwrWrapper(this.brokerConfiguration, 'compraService', 'listComprasByFilters', arg0, arg1, arg2, arg3, arg4) as Observable<Page<Compra>>;\n    }\n\n    public updateSituacaoCompra(arg0?: string, arg1?: string, arg2?: string, arg3?: number, arg4?: boolean): Observable<void> {\n        return dwrWrapper(this.brokerConfiguration, 'compraService', 'updateSituacaoCompra', arg0, arg1, arg2, arg3, arg4) as Observable<void>;\n    }\n\n\n}\n\n\n\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}